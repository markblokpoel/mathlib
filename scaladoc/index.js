Index.PACKAGES = {"mathlib" : [], "mathlib.demos" : [{"name" : "mathlib.demos.Coherence", "shortDescription" : "", "object" : "mathlib\/demos\/Coherence$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "mathlib.demos.Coherence.main", "link" : "mathlib\/demos\/Coherence$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/demos\/Coherence$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/demos\/Coherence$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/demos\/Coherence$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/demos\/Coherence$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/demos\/Coherence$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/demos\/Coherence$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/demos\/Coherence$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/demos\/Coherence$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/demos\/Coherence$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/demos\/Coherence$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/demos\/Coherence$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/demos\/Coherence$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "mathlib\/demos\/Coherence$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/demos\/Coherence$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/demos\/Coherence$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "mathlib\/demos\/Coherence$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/demos\/Coherence$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/demos\/Coherence$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/demos\/Coherence$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "mathlib.demos.GraphsDemo", "shortDescription" : "", "object" : "mathlib\/demos\/GraphsDemo$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "mathlib.demos.GraphsDemo.main", "link" : "mathlib\/demos\/GraphsDemo$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/demos\/GraphsDemo$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/demos\/GraphsDemo$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/demos\/GraphsDemo$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/demos\/GraphsDemo$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/demos\/GraphsDemo$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/demos\/GraphsDemo$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/demos\/GraphsDemo$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/demos\/GraphsDemo$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/demos\/GraphsDemo$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/demos\/GraphsDemo$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/demos\/GraphsDemo$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/demos\/GraphsDemo$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "mathlib\/demos\/GraphsDemo$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/demos\/GraphsDemo$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/demos\/GraphsDemo$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "mathlib\/demos\/GraphsDemo$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/demos\/GraphsDemo$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/demos\/GraphsDemo$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/demos\/GraphsDemo$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "mathlib.demos.SubsetChoice", "shortDescription" : "", "object" : "mathlib\/demos\/SubsetChoice$.html", "members_object" : [{"label" : "subsetChoice", "tail" : "(stuff: Set[Item], f: (Item) => Double, f2: (Item, Item) => Double): Set[Set[Item]]", "member" : "mathlib.demos.SubsetChoice.subsetChoice", "link" : "mathlib\/demos\/SubsetChoice$.html#subsetChoice(stuff:Set[mathlib.demos.SubsetChoice.Item],f:mathlib.demos.SubsetChoice.Item=>Double,f2:(mathlib.demos.SubsetChoice.Item,mathlib.demos.SubsetChoice.Item)=>Double):Set[Set[mathlib.demos.SubsetChoice.Item]]", "kind" : "def"}, {"label" : "Item", "tail" : "", "member" : "mathlib.demos.SubsetChoice.Item", "link" : "mathlib\/demos\/SubsetChoice$.html#Item=String", "kind" : "type"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "mathlib.demos.SubsetChoice.main", "link" : "mathlib\/demos\/SubsetChoice$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/demos\/SubsetChoice$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/demos\/SubsetChoice$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/demos\/SubsetChoice$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/demos\/SubsetChoice$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/demos\/SubsetChoice$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/demos\/SubsetChoice$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/demos\/SubsetChoice$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/demos\/SubsetChoice$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/demos\/SubsetChoice$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/demos\/SubsetChoice$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/demos\/SubsetChoice$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/demos\/SubsetChoice$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "mathlib\/demos\/SubsetChoice$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/demos\/SubsetChoice$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/demos\/SubsetChoice$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "mathlib\/demos\/SubsetChoice$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/demos\/SubsetChoice$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/demos\/SubsetChoice$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/demos\/SubsetChoice$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "mathlib.demos.VertexCover", "shortDescription" : "", "object" : "mathlib\/demos\/VertexCover$.html", "members_object" : [{"label" : "fptVertexCover", "tail" : "(graph: UnDiGraph[String], k: Int, acc: Set[Node[String]]): Set[Set[Node[String]]]", "member" : "mathlib.demos.VertexCover.fptVertexCover", "link" : "mathlib\/demos\/VertexCover$.html#fptVertexCover(graph:mathlib.graph.UnDiGraph[String],k:Int,acc:Set[mathlib.graph.Node[String]]):Set[Set[mathlib.graph.Node[String]]]", "kind" : "def"}, {"label" : "fptvc", "tail" : "(graph: UnDiGraph[String], k: Int, acc: Set[Node[String]]): Set[Set[Node[String]]]", "member" : "mathlib.demos.VertexCover.fptvc", "link" : "mathlib\/demos\/VertexCover$.html#fptvc(graph:mathlib.graph.UnDiGraph[String],k:Int,acc:Set[mathlib.graph.Node[String]]):Set[Set[mathlib.graph.Node[String]]]", "kind" : "def"}, {"label" : "BoundedSearchTree", "tail" : "", "member" : "mathlib.demos.VertexCover.BoundedSearchTree", "link" : "mathlib\/demos\/VertexCover$.html#BoundedSearchTree[T,S]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "vertexCover", "tail" : "(graph: UnDiGraph[String], k: Int): Set[Set[Node[String]]]", "member" : "mathlib.demos.VertexCover.vertexCover", "link" : "mathlib\/demos\/VertexCover$.html#vertexCover(graph:mathlib.graph.UnDiGraph[String],k:Int):Set[Set[mathlib.graph.Node[String]]]", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "mathlib.demos.VertexCover.main", "link" : "mathlib\/demos\/VertexCover$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/demos\/VertexCover$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/demos\/VertexCover$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/demos\/VertexCover$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/demos\/VertexCover$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/demos\/VertexCover$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/demos\/VertexCover$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/demos\/VertexCover$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/demos\/VertexCover$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/demos\/VertexCover$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/demos\/VertexCover$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/demos\/VertexCover$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/demos\/VertexCover$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "mathlib\/demos\/VertexCover$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/demos\/VertexCover$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/demos\/VertexCover$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "mathlib\/demos\/VertexCover$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/demos\/VertexCover$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/demos\/VertexCover$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/demos\/VertexCover$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "mathlib.set" : [{"name" : "mathlib.set.SetTheory", "shortDescription" : "Implementation of basic set theory.", "object" : "mathlib\/set\/SetTheory$.html", "members_object" : [{"label" : "ImplSetSet", "tail" : "", "member" : "mathlib.set.SetTheory.ImplSetSet", "link" : "mathlib\/set\/SetTheory$.html#ImplSetSet[A]extendsAnyRef", "kind" : "implicit class"}, {"label" : "Impl2Set", "tail" : "", "member" : "mathlib.set.SetTheory.Impl2Set", "link" : "mathlib\/set\/SetTheory$.html#Impl2Set[A,B]extendsAnyRef", "kind" : "implicit class"}, {"label" : "ImplSet", "tail" : "", "member" : "mathlib.set.SetTheory.ImplSet", "link" : "mathlib\/set\/SetTheory$.html#ImplSet[A]extendsAnyRef", "kind" : "implicit class"}, {"label" : "ImplAny", "tail" : "", "member" : "mathlib.set.SetTheory.ImplAny", "link" : "mathlib\/set\/SetTheory$.html#ImplAny[A]extendsAnyRef", "kind" : "implicit class"}, {"label" : "random", "tail" : "(set: Set[A]): Option[A]", "member" : "mathlib.set.SetTheory.random", "link" : "mathlib\/set\/SetTheory$.html#random[A](set:Set[A]):Option[A]", "kind" : "def"}, {"label" : "product", "tail" : "(set: Set[(A, A)], f: (A, A) => T)(nso: NumberSetOps[T]): T", "member" : "mathlib.set.SetTheory.product", "link" : "mathlib\/set\/SetTheory$.html#product[A,T](set:Set[(A,A)],f:(A,A)=>T)(implicitnso:mathlib.set.SetTheory.NumberSetOps[T]):T", "kind" : "def"}, {"label" : "product", "tail" : "(set: Set[A], f: (A) => T)(nso: NumberSetOps[T]): T", "member" : "mathlib.set.SetTheory.product", "link" : "mathlib\/set\/SetTheory$.html#product[A,T](set:Set[A],f:A=>T)(implicitnso:mathlib.set.SetTheory.NumberSetOps[T]):T", "kind" : "def"}, {"label" : "product", "tail" : "(set: Set[T])(nso: NumberSetOps[T]): T", "member" : "mathlib.set.SetTheory.product", "link" : "mathlib\/set\/SetTheory$.html#product[T](set:Set[T])(implicitnso:mathlib.set.SetTheory.NumberSetOps[T]):T", "kind" : "def"}, {"label" : "sum", "tail" : "(set: Set[(A, A)], f: (A, A) => T)(nso: NumberSetOps[T]): T", "member" : "mathlib.set.SetTheory.sum", "link" : "mathlib\/set\/SetTheory$.html#sum[A,T](set:Set[(A,A)],f:(A,A)=>T)(implicitnso:mathlib.set.SetTheory.NumberSetOps[T]):T", "kind" : "def"}, {"label" : "sum", "tail" : "(set: Set[A], f: (A) => T)(nso: NumberSetOps[T]): T", "member" : "mathlib.set.SetTheory.sum", "link" : "mathlib\/set\/SetTheory$.html#sum[A,T](set:Set[A],f:A=>T)(implicitnso:mathlib.set.SetTheory.NumberSetOps[T]):T", "kind" : "def"}, {"label" : "sum", "tail" : "(set: Set[T])(nso: NumberSetOps[T]): T", "member" : "mathlib.set.SetTheory.sum", "link" : "mathlib\/set\/SetTheory$.html#sum[T](set:Set[T])(implicitnso:mathlib.set.SetTheory.NumberSetOps[T]):T", "kind" : "def"}, {"label" : "argMax", "tail" : "(set: Set[A], f: (A) => T)(ord: Ordering[T]): Set[A]", "member" : "mathlib.set.SetTheory.argMax", "link" : "mathlib\/set\/SetTheory$.html#argMax[A,T](set:Set[A],f:A=>T)(implicitord:Ordering[T]):Set[A]", "kind" : "def"}, {"label" : "powersetLow", "tail" : "(set: Set[A], lowerbound: Int): Set[Set[A]]", "member" : "mathlib.set.SetTheory.powersetLow", "link" : "mathlib\/set\/SetTheory$.html#powersetLow[A](set:Set[A],lowerbound:Int):Set[Set[A]]", "kind" : "def"}, {"label" : "powersetUp", "tail" : "(set: Set[A], upperbound: Int): Set[Set[A]]", "member" : "mathlib.set.SetTheory.powersetUp", "link" : "mathlib\/set\/SetTheory$.html#powersetUp[A](set:Set[A],upperbound:Int):Set[Set[A]]", "kind" : "def"}, {"label" : "P", "tail" : "(set: Set[A], len: Int): Set[Set[A]]", "member" : "mathlib.set.SetTheory.P", "link" : "mathlib\/set\/SetTheory$.html#P[A](set:Set[A],len:Int):Set[Set[A]]", "kind" : "def"}, {"label" : "powerset", "tail" : "(set: Set[A], len: Int): Set[Set[A]]", "member" : "mathlib.set.SetTheory.powerset", "link" : "mathlib\/set\/SetTheory$.html#powerset[A](set:Set[A],len:Int):Set[Set[A]]", "kind" : "def"}, {"label" : "P", "tail" : "(set: Set[A]): Set[Set[A]]", "member" : "mathlib.set.SetTheory.P", "link" : "mathlib\/set\/SetTheory$.html#P[A](set:Set[A]):Set[Set[A]]", "kind" : "def"}, {"label" : "powerset", "tail" : "(set: Set[A]): Set[Set[A]]", "member" : "mathlib.set.SetTheory.powerset", "link" : "mathlib\/set\/SetTheory$.html#powerset[A](set:Set[A]):Set[Set[A]]", "kind" : "def"}, {"label" : "FloatNumberOps", "tail" : "", "member" : "mathlib.set.SetTheory.FloatNumberOps", "link" : "mathlib\/set\/SetTheory$.html#FloatNumberOps", "kind" : "implicit object"}, {"label" : "DoubleNumberOps", "tail" : "", "member" : "mathlib.set.SetTheory.DoubleNumberOps", "link" : "mathlib\/set\/SetTheory$.html#DoubleNumberOps", "kind" : "implicit object"}, {"label" : "IntNumberOps", "tail" : "", "member" : "mathlib.set.SetTheory.IntNumberOps", "link" : "mathlib\/set\/SetTheory$.html#IntNumberOps", "kind" : "implicit object"}, {"label" : "NumberSetOps", "tail" : "", "member" : "mathlib.set.SetTheory.NumberSetOps", "link" : "mathlib\/set\/SetTheory$.html#NumberSetOps[T]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/set\/SetTheory$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/set\/SetTheory$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/set\/SetTheory$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/set\/SetTheory$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/set\/SetTheory$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/set\/SetTheory$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/set\/SetTheory$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/set\/SetTheory$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/set\/SetTheory$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/set\/SetTheory$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/set\/SetTheory$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/set\/SetTheory$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "mathlib\/set\/SetTheory$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/set\/SetTheory$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/set\/SetTheory$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "mathlib\/set\/SetTheory$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/set\/SetTheory$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/set\/SetTheory$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/set\/SetTheory$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "mathlib.graph.properties" : [{"name" : "mathlib.graph.properties.Edge", "shortDescription" : "Represents an abstract edge data structure.", "members_class" : [{"label" : "getNeighborOf", "tail" : "(vertex: T): Option[T]", "member" : "mathlib.graph.properties.Edge.getNeighborOf", "link" : "mathlib\/graph\/properties\/Edge.html#getNeighborOf(vertex:T):Option[T]", "kind" : "def"}, {"label" : "contains", "tail" : "(vertex: T): Boolean", "member" : "mathlib.graph.properties.Edge.contains", "link" : "mathlib\/graph\/properties\/Edge.html#contains(vertex:T):Boolean", "kind" : "def"}, {"member" : "mathlib.graph.properties.Edge#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": T", "member" : "mathlib.graph.properties.Edge.right", "link" : "mathlib\/graph\/properties\/Edge.html#right:T", "kind" : "val"}, {"label" : "left", "tail" : ": T", "member" : "mathlib.graph.properties.Edge.left", "link" : "mathlib\/graph\/properties\/Edge.html#left:T", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/properties\/Edge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/properties\/Edge.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/properties\/Edge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/properties\/Edge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/properties\/Edge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/properties\/Edge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/properties\/Edge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/properties\/Edge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/properties\/Edge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/properties\/Edge.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/properties\/Edge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/properties\/Edge.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "mathlib\/graph\/properties\/Edge.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/properties\/Edge.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/graph\/properties\/Edge.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "mathlib\/graph\/properties\/Edge.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/properties\/Edge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/properties\/Edge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/properties\/Edge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "mathlib\/graph\/properties\/Edge.html", "kind" : "class"}, {"name" : "mathlib.graph.properties.HyperEdge", "shortDescription" : "Abstract class to represent a basic hyper edge.", "members_class" : [{"label" : "contains", "tail" : "(vertices: Set[T]): Boolean", "member" : "mathlib.graph.properties.HyperEdge.contains", "link" : "mathlib\/graph\/properties\/HyperEdge.html#contains(vertices:Set[T]):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(vertex: T): Boolean", "member" : "mathlib.graph.properties.HyperEdge.contains", "link" : "mathlib\/graph\/properties\/HyperEdge.html#contains(vertex:T):Boolean", "kind" : "def"}, {"member" : "mathlib.graph.properties.HyperEdge#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/properties\/HyperEdge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/properties\/HyperEdge.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/properties\/HyperEdge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/properties\/HyperEdge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/properties\/HyperEdge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/properties\/HyperEdge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/properties\/HyperEdge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/properties\/HyperEdge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/properties\/HyperEdge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/properties\/HyperEdge.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/properties\/HyperEdge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/properties\/HyperEdge.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "mathlib\/graph\/properties\/HyperEdge.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/properties\/HyperEdge.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/graph\/properties\/HyperEdge.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "mathlib\/graph\/properties\/HyperEdge.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/properties\/HyperEdge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/properties\/HyperEdge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/properties\/HyperEdge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "mathlib\/graph\/properties\/HyperEdge.html", "kind" : "class"}, {"name" : "mathlib.graph.properties.ProtoEdge", "trait" : "mathlib\/graph\/properties\/ProtoEdge.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/properties\/ProtoEdge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/properties\/ProtoEdge.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/properties\/ProtoEdge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/properties\/ProtoEdge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/properties\/ProtoEdge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/properties\/ProtoEdge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/properties\/ProtoEdge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/properties\/ProtoEdge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/properties\/ProtoEdge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/properties\/ProtoEdge.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/properties\/ProtoEdge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/properties\/ProtoEdge.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "mathlib\/graph\/properties\/ProtoEdge.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/properties\/ProtoEdge.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/graph\/properties\/ProtoEdge.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "mathlib\/graph\/properties\/ProtoEdge.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/properties\/ProtoEdge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/properties\/ProtoEdge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/properties\/ProtoEdge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Proto trait for all non-hyper edges."}, {"name" : "mathlib.graph.properties.WeightedEdge", "trait" : "mathlib\/graph\/properties\/WeightedEdge.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/properties\/WeightedEdge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/properties\/WeightedEdge.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/properties\/WeightedEdge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/properties\/WeightedEdge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/properties\/WeightedEdge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/properties\/WeightedEdge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/properties\/WeightedEdge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/properties\/WeightedEdge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/properties\/WeightedEdge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/properties\/WeightedEdge.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/properties\/WeightedEdge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/properties\/WeightedEdge.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "mathlib\/graph\/properties\/WeightedEdge.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/properties\/WeightedEdge.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/graph\/properties\/WeightedEdge.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "mathlib\/graph\/properties\/WeightedEdge.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/properties\/WeightedEdge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/properties\/WeightedEdge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/properties\/WeightedEdge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "weight", "tail" : ": Double", "member" : "mathlib.graph.properties.WeightedEdge.weight", "link" : "mathlib\/graph\/properties\/WeightedEdge.html#weight:Double", "kind" : "abstract val"}], "shortDescription" : "Trait for weighted edges."}], "mathlib.probability.datastructures" : [{"name" : "mathlib.probability.datastructures.PBranch", "shortDescription" : "", "object" : "mathlib\/probability\/datastructures\/PBranch$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "mathlib.probability.datastructures.PBranch.toString", "link" : "mathlib\/probability\/datastructures\/PBranch.html#toString():String", "kind" : "def"}, {"label" : "apply", "tail" : "(t: Double): A", "member" : "mathlib.probability.datastructures.PBranch.apply", "link" : "mathlib\/probability\/datastructures\/PBranch.html#apply(t:Double):A", "kind" : "def"}, {"member" : "mathlib.probability.datastructures.PBranch#<init>", "error" : "unsupported entity"}, {"label" : "threshold", "tail" : ": Double", "member" : "mathlib.probability.datastructures.PBranch.threshold", "link" : "mathlib\/probability\/datastructures\/PBranch.html#threshold:Double", "kind" : "val"}, {"label" : "right", "tail" : ": PTree[A]", "member" : "mathlib.probability.datastructures.PBranch.right", "link" : "mathlib\/probability\/datastructures\/PBranch.html#right:mathlib.probability.datastructures.PTree[A]", "kind" : "val"}, {"label" : "left", "tail" : ": PTree[A]", "member" : "mathlib.probability.datastructures.PBranch.left", "link" : "mathlib\/probability\/datastructures\/PBranch.html#left:mathlib.probability.datastructures.PTree[A]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/probability\/datastructures\/PBranch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/probability\/datastructures\/PBranch.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/probability\/datastructures\/PBranch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/probability\/datastructures\/PBranch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/probability\/datastructures\/PBranch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/probability\/datastructures\/PBranch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/probability\/datastructures\/PBranch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/datastructures\/PBranch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/datastructures\/PBranch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/datastructures\/PBranch.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/probability\/datastructures\/PBranch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/probability\/datastructures\/PBranch.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/probability\/datastructures\/PBranch.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/probability\/datastructures\/PBranch.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "mathlib\/probability\/datastructures\/PBranch.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/probability\/datastructures\/PBranch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/probability\/datastructures\/PBranch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/probability\/datastructures\/PBranch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(left: PTree[A], right: PTree[A], threshold: Double): PBranch[A]", "member" : "mathlib.probability.datastructures.PBranch.apply", "link" : "mathlib\/probability\/datastructures\/PBranch$.html#apply[A](left:mathlib.probability.datastructures.PTree[A],right:mathlib.probability.datastructures.PTree[A],threshold:Double):mathlib.probability.datastructures.PBranch[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/probability\/datastructures\/PBranch$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/probability\/datastructures\/PBranch$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/probability\/datastructures\/PBranch$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/probability\/datastructures\/PBranch$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/probability\/datastructures\/PBranch$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/probability\/datastructures\/PBranch$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/probability\/datastructures\/PBranch$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/datastructures\/PBranch$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/datastructures\/PBranch$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/datastructures\/PBranch$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/probability\/datastructures\/PBranch$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/probability\/datastructures\/PBranch$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "mathlib\/probability\/datastructures\/PBranch$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/probability\/datastructures\/PBranch$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/probability\/datastructures\/PBranch$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "mathlib\/probability\/datastructures\/PBranch$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/probability\/datastructures\/PBranch$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/probability\/datastructures\/PBranch$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/probability\/datastructures\/PBranch$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "mathlib\/probability\/datastructures\/PBranch.html", "kind" : "class"}, {"name" : "mathlib.probability.datastructures.PLeaf", "shortDescription" : "", "object" : "mathlib\/probability\/datastructures\/PLeaf$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "mathlib.probability.datastructures.PLeaf.toString", "link" : "mathlib\/probability\/datastructures\/PLeaf.html#toString():String", "kind" : "def"}, {"label" : "apply", "tail" : "(t: Double): A", "member" : "mathlib.probability.datastructures.PLeaf.apply", "link" : "mathlib\/probability\/datastructures\/PLeaf.html#apply(t:Double):A", "kind" : "def"}, {"member" : "mathlib.probability.datastructures.PLeaf#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": A", "member" : "mathlib.probability.datastructures.PLeaf.value", "link" : "mathlib\/probability\/datastructures\/PLeaf.html#value:A", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/probability\/datastructures\/PLeaf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/probability\/datastructures\/PLeaf.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/probability\/datastructures\/PLeaf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/probability\/datastructures\/PLeaf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/probability\/datastructures\/PLeaf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/probability\/datastructures\/PLeaf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/probability\/datastructures\/PLeaf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/datastructures\/PLeaf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/datastructures\/PLeaf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/datastructures\/PLeaf.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/probability\/datastructures\/PLeaf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/probability\/datastructures\/PLeaf.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/probability\/datastructures\/PLeaf.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/probability\/datastructures\/PLeaf.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "mathlib\/probability\/datastructures\/PLeaf.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/probability\/datastructures\/PLeaf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/probability\/datastructures\/PLeaf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/probability\/datastructures\/PLeaf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(value: A): PLeaf[A]", "member" : "mathlib.probability.datastructures.PLeaf.apply", "link" : "mathlib\/probability\/datastructures\/PLeaf$.html#apply[A](value:A):mathlib.probability.datastructures.PLeaf[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/probability\/datastructures\/PLeaf$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/probability\/datastructures\/PLeaf$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/probability\/datastructures\/PLeaf$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/probability\/datastructures\/PLeaf$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/probability\/datastructures\/PLeaf$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/probability\/datastructures\/PLeaf$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/probability\/datastructures\/PLeaf$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/datastructures\/PLeaf$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/datastructures\/PLeaf$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/datastructures\/PLeaf$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/probability\/datastructures\/PLeaf$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/probability\/datastructures\/PLeaf$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "mathlib\/probability\/datastructures\/PLeaf$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/probability\/datastructures\/PLeaf$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/probability\/datastructures\/PLeaf$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "mathlib\/probability\/datastructures\/PLeaf$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/probability\/datastructures\/PLeaf$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/probability\/datastructures\/PLeaf$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/probability\/datastructures\/PLeaf$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "mathlib\/probability\/datastructures\/PLeaf.html", "kind" : "class"}, {"name" : "mathlib.probability.datastructures.ProbabilityTree", "shortDescription" : "Constructs a tree-representation of the distribution where elements are organized according to theirprobability mass.", "members_case class" : [{"label" : "apply", "tail" : "(p: Double): A", "member" : "mathlib.probability.datastructures.ProbabilityTree.apply", "link" : "mathlib\/probability\/datastructures\/ProbabilityTree.html#apply(p:Double):A", "kind" : "def"}, {"label" : "tree", "tail" : ": PTree[A]", "member" : "mathlib.probability.datastructures.ProbabilityTree.tree", "link" : "mathlib\/probability\/datastructures\/ProbabilityTree.html#tree:mathlib.probability.datastructures.PTree[A]", "kind" : "val"}, {"member" : "mathlib.probability.datastructures.ProbabilityTree#<init>", "error" : "unsupported entity"}, {"label" : "distribution", "tail" : ": Distribution[A]", "member" : "mathlib.probability.datastructures.ProbabilityTree.distribution", "link" : "mathlib\/probability\/datastructures\/ProbabilityTree.html#distribution:mathlib.probability.Distribution[A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/probability\/datastructures\/ProbabilityTree.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/probability\/datastructures\/ProbabilityTree.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/probability\/datastructures\/ProbabilityTree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/probability\/datastructures\/ProbabilityTree.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/probability\/datastructures\/ProbabilityTree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/probability\/datastructures\/ProbabilityTree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/probability\/datastructures\/ProbabilityTree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/probability\/datastructures\/ProbabilityTree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/probability\/datastructures\/ProbabilityTree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/datastructures\/ProbabilityTree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/datastructures\/ProbabilityTree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/datastructures\/ProbabilityTree.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/probability\/datastructures\/ProbabilityTree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/probability\/datastructures\/ProbabilityTree.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/probability\/datastructures\/ProbabilityTree.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/probability\/datastructures\/ProbabilityTree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/probability\/datastructures\/ProbabilityTree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/probability\/datastructures\/ProbabilityTree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/probability\/datastructures\/ProbabilityTree.html", "kind" : "case class"}, {"name" : "mathlib.probability.datastructures.PTree", "trait" : "mathlib\/probability\/datastructures\/PTree.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/probability\/datastructures\/PTree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/probability\/datastructures\/PTree.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/probability\/datastructures\/PTree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/probability\/datastructures\/PTree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/probability\/datastructures\/PTree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/probability\/datastructures\/PTree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/probability\/datastructures\/PTree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/datastructures\/PTree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/datastructures\/PTree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/datastructures\/PTree.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/probability\/datastructures\/PTree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/probability\/datastructures\/PTree.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "mathlib\/probability\/datastructures\/PTree.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/probability\/datastructures\/PTree.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/probability\/datastructures\/PTree.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "mathlib\/probability\/datastructures\/PTree.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/probability\/datastructures\/PTree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/probability\/datastructures\/PTree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/probability\/datastructures\/PTree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(t: Double): A", "member" : "mathlib.probability.datastructures.PTree.apply", "link" : "mathlib\/probability\/datastructures\/PTree.html#apply(t:Double):A", "kind" : "abstract def"}], "shortDescription" : ""}], "mathlib.probability" : [{"name" : "mathlib.probability.Conditional1", "shortDescription" : "", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "mathlib.probability.Conditional1.toString", "link" : "mathlib\/probability\/Conditional1.html#toString():String", "kind" : "def"}, {"member" : "mathlib.probability.Conditional1#<init>", "error" : "unsupported entity"}, {"label" : "condition", "tail" : ": B", "member" : "mathlib.probability.Conditional1.condition", "link" : "mathlib\/probability\/Conditional1.html#condition:B", "kind" : "val"}, {"label" : "value", "tail" : ": A", "member" : "mathlib.probability.Conditional1.value", "link" : "mathlib\/probability\/Conditional1.html#value:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/probability\/Conditional1.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/probability\/Conditional1.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/probability\/Conditional1.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/probability\/Conditional1.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/probability\/Conditional1.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/probability\/Conditional1.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/probability\/Conditional1.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/probability\/Conditional1.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/probability\/Conditional1.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/Conditional1.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/Conditional1.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/Conditional1.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/probability\/Conditional1.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/probability\/Conditional1.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/probability\/Conditional1.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/probability\/Conditional1.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/probability\/Conditional1.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/probability\/Conditional1.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/probability\/Conditional1.html", "kind" : "case class"}, {"name" : "mathlib.probability.Conditional2", "shortDescription" : "", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "mathlib.probability.Conditional2.toString", "link" : "mathlib\/probability\/Conditional2.html#toString():String", "kind" : "def"}, {"member" : "mathlib.probability.Conditional2#<init>", "error" : "unsupported entity"}, {"label" : "prior", "tail" : ": Distribution[B]", "member" : "mathlib.probability.Conditional2.prior", "link" : "mathlib\/probability\/Conditional2.html#prior:mathlib.probability.Distribution[B]", "kind" : "val"}, {"label" : "value", "tail" : ": A", "member" : "mathlib.probability.Conditional2.value", "link" : "mathlib\/probability\/Conditional2.html#value:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/probability\/Conditional2.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/probability\/Conditional2.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/probability\/Conditional2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/probability\/Conditional2.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/probability\/Conditional2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/probability\/Conditional2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/probability\/Conditional2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/probability\/Conditional2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/probability\/Conditional2.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/Conditional2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/Conditional2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/Conditional2.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/probability\/Conditional2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/probability\/Conditional2.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/probability\/Conditional2.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/probability\/Conditional2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/probability\/Conditional2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/probability\/Conditional2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/probability\/Conditional2.html", "kind" : "case class"}, {"name" : "mathlib.probability.ConditionalDistribution", "shortDescription" : "Implements a generic conditional probability distribution for two variables: ", "members_case class" : [{"label" : "cpt", "tail" : "(): Unit", "member" : "mathlib.probability.ConditionalDistribution.cpt", "link" : "mathlib\/probability\/ConditionalDistribution.html#cpt():Unit", "kind" : "def"}, {"label" : "softmax", "tail" : "(beta: Double): ConditionalDistribution[A, B]", "member" : "mathlib.probability.ConditionalDistribution.softmax", "link" : "mathlib\/probability\/ConditionalDistribution.html#softmax(beta:Double):mathlib.probability.ConditionalDistribution[A,B]", "kind" : "def"}, {"label" : "log", "tail" : "(): ConditionalDistribution[A, B]", "member" : "mathlib.probability.ConditionalDistribution.log", "link" : "mathlib\/probability\/ConditionalDistribution.html#log:mathlib.probability.ConditionalDistribution[A,B]", "kind" : "def"}, {"label" : "exp", "tail" : "(): ConditionalDistribution[A, B]", "member" : "mathlib.probability.ConditionalDistribution.exp", "link" : "mathlib\/probability\/ConditionalDistribution.html#exp:mathlib.probability.ConditionalDistribution[A,B]", "kind" : "def"}, {"label" : "sum", "tail" : "(): Double", "member" : "mathlib.probability.ConditionalDistribution.sum", "link" : "mathlib\/probability\/ConditionalDistribution.html#sum:Double", "kind" : "def"}, {"label" : "accuracy", "tail" : "(): Double", "member" : "mathlib.probability.ConditionalDistribution.accuracy", "link" : "mathlib\/probability\/ConditionalDistribution.html#accuracy:Double", "kind" : "def"}, {"label" : "isNormalized", "tail" : "(): Boolean", "member" : "mathlib.probability.ConditionalDistribution.isNormalized", "link" : "mathlib\/probability\/ConditionalDistribution.html#isNormalized:Boolean", "kind" : "def"}, {"label" : "bayes", "tail" : "(prior: Distribution[B]): ConditionalDistribution[B, A]", "member" : "mathlib.probability.ConditionalDistribution.bayes", "link" : "mathlib\/probability\/ConditionalDistribution.html#bayes(prior:mathlib.probability.Distribution[B]):mathlib.probability.ConditionalDistribution[B,A]", "kind" : "def"}, {"label" : "pr", "tail" : "(conditional: Conditional2[A, B]): Double", "member" : "mathlib.probability.ConditionalDistribution.pr", "link" : "mathlib\/probability\/ConditionalDistribution.html#pr(conditional:mathlib.probability.Conditional2[A,B]):Double", "kind" : "def"}, {"label" : "+", "tail" : "(other: ConditionalDistribution[A, B]): ConditionalDistribution[A, B]", "member" : "mathlib.probability.ConditionalDistribution.+", "link" : "mathlib\/probability\/ConditionalDistribution.html#+(other:mathlib.probability.ConditionalDistribution[A,B]):mathlib.probability.ConditionalDistribution[A,B]", "kind" : "def"}, {"label" : "\/", "tail" : "(scalar: Double): ConditionalDistribution[A, B]", "member" : "mathlib.probability.ConditionalDistribution.\/", "link" : "mathlib\/probability\/ConditionalDistribution.html#\/(scalar:Double):mathlib.probability.ConditionalDistribution[A,B]", "kind" : "def"}, {"label" : "*", "tail" : "(scalar: Double): ConditionalDistribution[A, B]", "member" : "mathlib.probability.ConditionalDistribution.*", "link" : "mathlib\/probability\/ConditionalDistribution.html#*(scalar:Double):mathlib.probability.ConditionalDistribution[A,B]", "kind" : "def"}, {"label" : "---", "tail" : "(other: Distribution[B]): ConditionalDistribution[A, B]", "member" : "mathlib.probability.ConditionalDistribution.---", "link" : "mathlib\/probability\/ConditionalDistribution.html#---(other:mathlib.probability.Distribution[B]):mathlib.probability.ConditionalDistribution[A,B]", "kind" : "def"}, {"label" : "--", "tail" : "(other: Distribution[A]): ConditionalDistribution[A, B]", "member" : "mathlib.probability.ConditionalDistribution.--", "link" : "mathlib\/probability\/ConditionalDistribution.html#--(other:mathlib.probability.Distribution[A]):mathlib.probability.ConditionalDistribution[A,B]", "kind" : "def"}, {"label" : "*", "tail" : "(prior: Distribution[B]): Distribution[A]", "member" : "mathlib.probability.ConditionalDistribution.*", "link" : "mathlib\/probability\/ConditionalDistribution.html#*(prior:mathlib.probability.Distribution[B]):mathlib.probability.Distribution[A]", "kind" : "def"}, {"label" : "marginalLikelihood", "tail" : "(): Distribution[B]", "member" : "mathlib.probability.ConditionalDistribution.marginalLikelihood", "link" : "mathlib\/probability\/ConditionalDistribution.html#marginalLikelihood:mathlib.probability.Distribution[B]", "kind" : "def"}, {"label" : "marginalDistribution", "tail" : "(): Distribution[A]", "member" : "mathlib.probability.ConditionalDistribution.marginalDistribution", "link" : "mathlib\/probability\/ConditionalDistribution.html#marginalDistribution:mathlib.probability.Distribution[A]", "kind" : "def"}, {"label" : "prConditional", "tail" : "(conditional: B): Double", "member" : "mathlib.probability.ConditionalDistribution.prConditional", "link" : "mathlib\/probability\/ConditionalDistribution.html#prConditional(conditional:B):Double", "kind" : "def"}, {"label" : "prValue", "tail" : "(value: A): Double", "member" : "mathlib.probability.ConditionalDistribution.prValue", "link" : "mathlib\/probability\/ConditionalDistribution.html#prValue(value:A):Double", "kind" : "def"}, {"label" : "pr", "tail" : "(conditional: B): Distribution[A]", "member" : "mathlib.probability.ConditionalDistribution.pr", "link" : "mathlib\/probability\/ConditionalDistribution.html#pr(conditional:B):mathlib.probability.Distribution[A]", "kind" : "def"}, {"label" : "pr", "tail" : "(conditional: Conditional1[A, B]): Double", "member" : "mathlib.probability.ConditionalDistribution.pr", "link" : "mathlib\/probability\/ConditionalDistribution.html#pr(conditional:mathlib.probability.Conditional1[A,B]):Double", "kind" : "def"}, {"member" : "mathlib.probability.ConditionalDistribution#<init>", "error" : "unsupported entity"}, {"label" : "distribution", "tail" : ": Map[(A, B), Double]", "member" : "mathlib.probability.ConditionalDistribution.distribution", "link" : "mathlib\/probability\/ConditionalDistribution.html#distribution:Map[(A,B),Double]", "kind" : "val"}, {"label" : "domainV2", "tail" : ": Set[B]", "member" : "mathlib.probability.ConditionalDistribution.domainV2", "link" : "mathlib\/probability\/ConditionalDistribution.html#domainV2:Set[B]", "kind" : "val"}, {"label" : "domainV1", "tail" : ": Set[A]", "member" : "mathlib.probability.ConditionalDistribution.domainV1", "link" : "mathlib\/probability\/ConditionalDistribution.html#domainV1:Set[A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/probability\/ConditionalDistribution.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/probability\/ConditionalDistribution.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/probability\/ConditionalDistribution.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/probability\/ConditionalDistribution.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/probability\/ConditionalDistribution.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/probability\/ConditionalDistribution.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/probability\/ConditionalDistribution.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/probability\/ConditionalDistribution.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/probability\/ConditionalDistribution.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/ConditionalDistribution.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/ConditionalDistribution.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/ConditionalDistribution.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/probability\/ConditionalDistribution.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/probability\/ConditionalDistribution.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/probability\/ConditionalDistribution.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/probability\/ConditionalDistribution.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/probability\/ConditionalDistribution.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/probability\/ConditionalDistribution.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/probability\/ConditionalDistribution.html", "kind" : "case class"}, {"name" : "mathlib.probability.Distribution", "case object" : "mathlib\/probability\/Distribution$.html", "shortDescription" : "Implements a generic probability distribution.", "members_case object" : [{"label" : "apply", "tail" : "(domain: Vector[A], distribution: Vector[Double])(arg0: ClassTag[X], arg1: ClassTag[Y]): Distribution[A]", "member" : "mathlib.probability.Distribution.apply", "link" : "mathlib\/probability\/Distribution$.html#apply[A,X,Y](domain:Vector[A],distribution:Vector[Double])(implicitevidence$2:scala.reflect.ClassTag[X],implicitevidence$3:scala.reflect.ClassTag[Y]):mathlib.probability.Distribution[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(domain: Vector[A], distribution: Vector[Double])(arg0: ClassTag[X]): Distribution[A]", "member" : "mathlib.probability.Distribution.apply", "link" : "mathlib\/probability\/Distribution$.html#apply[A,X](domain:Vector[A],distribution:Vector[Double])(implicitevidence$1:scala.reflect.ClassTag[X]):mathlib.probability.Distribution[A]", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/probability\/Distribution$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "mathlib\/probability\/Distribution$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/probability\/Distribution$.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/probability\/Distribution$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/probability\/Distribution$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/probability\/Distribution$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/probability\/Distribution$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/probability\/Distribution$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/probability\/Distribution$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/probability\/Distribution$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/Distribution$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/Distribution$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/Distribution$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/probability\/Distribution$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/probability\/Distribution$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/probability\/Distribution$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/probability\/Distribution$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/probability\/Distribution$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/probability\/Distribution$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/probability\/Distribution$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "hist", "tail" : "(): Unit", "member" : "mathlib.probability.Distribution.hist", "link" : "mathlib\/probability\/Distribution.html#hist():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "mathlib.probability.Distribution.toString", "link" : "mathlib\/probability\/Distribution.html#toString():String", "kind" : "def"}, {"label" : "sum", "tail" : "(): Double", "member" : "mathlib.probability.Distribution.sum", "link" : "mathlib\/probability\/Distribution.html#sum:Double", "kind" : "def"}, {"label" : "entropy", "tail" : "(): Double", "member" : "mathlib.probability.Distribution.entropy", "link" : "mathlib\/probability\/Distribution.html#entropy:Double", "kind" : "def"}, {"label" : "softmax", "tail" : "(beta: Double): Distribution[A]", "member" : "mathlib.probability.Distribution.softmax", "link" : "mathlib\/probability\/Distribution.html#softmax(beta:Double):mathlib.probability.Distribution[A]", "kind" : "def"}, {"label" : "log", "tail" : "(): Distribution[A]", "member" : "mathlib.probability.Distribution.log", "link" : "mathlib\/probability\/Distribution.html#log:mathlib.probability.Distribution[A]", "kind" : "def"}, {"label" : "exp", "tail" : "(): Distribution[A]", "member" : "mathlib.probability.Distribution.exp", "link" : "mathlib\/probability\/Distribution.html#exp:mathlib.probability.Distribution[A]", "kind" : "def"}, {"label" : "argMax", "tail" : "(): A", "member" : "mathlib.probability.Distribution.argMax", "link" : "mathlib\/probability\/Distribution.html#argMax:A", "kind" : "def"}, {"label" : "accuracy", "tail" : "(): Double", "member" : "mathlib.probability.Distribution.accuracy", "link" : "mathlib\/probability\/Distribution.html#accuracy:Double", "kind" : "def"}, {"label" : "isNormalized", "tail" : "(): Boolean", "member" : "mathlib.probability.Distribution.isNormalized", "link" : "mathlib\/probability\/Distribution.html#isNormalized:Boolean", "kind" : "def"}, {"label" : "sample", "tail" : "(n: Int): Iterator[A]", "member" : "mathlib.probability.Distribution.sample", "link" : "mathlib\/probability\/Distribution.html#sample(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "sample", "tail" : "(): A", "member" : "mathlib.probability.Distribution.sample", "link" : "mathlib\/probability\/Distribution.html#sample:A", "kind" : "def"}, {"label" : "\/", "tail" : "(scalar: Double): Distribution[A]", "member" : "mathlib.probability.Distribution.\/", "link" : "mathlib\/probability\/Distribution.html#\/(scalar:Double):mathlib.probability.Distribution[A]", "kind" : "def"}, {"label" : "-", "tail" : "(other: Distribution[A]): Distribution[A]", "member" : "mathlib.probability.Distribution.-", "link" : "mathlib\/probability\/Distribution.html#-(other:mathlib.probability.Distribution[A]):mathlib.probability.Distribution[A]", "kind" : "def"}, {"label" : "+", "tail" : "(other: Distribution[A]): Distribution[A]", "member" : "mathlib.probability.Distribution.+", "link" : "mathlib\/probability\/Distribution.html#+(other:mathlib.probability.Distribution[A]):mathlib.probability.Distribution[A]", "kind" : "def"}, {"label" : "*", "tail" : "(scalar: Double): Distribution[A]", "member" : "mathlib.probability.Distribution.*", "link" : "mathlib\/probability\/Distribution.html#*(scalar:Double):mathlib.probability.Distribution[A]", "kind" : "def"}, {"label" : "pr", "tail" : "(value: A): Double", "member" : "mathlib.probability.Distribution.pr", "link" : "mathlib\/probability\/Distribution.html#pr(value:A):Double", "kind" : "def"}, {"member" : "mathlib.probability.Distribution#<init>", "error" : "unsupported entity"}, {"label" : "distribution", "tail" : ": Map[A, Double]", "member" : "mathlib.probability.Distribution.distribution", "link" : "mathlib\/probability\/Distribution.html#distribution:Map[A,Double]", "kind" : "val"}, {"label" : "domain", "tail" : ": Set[A]", "member" : "mathlib.probability.Distribution.domain", "link" : "mathlib\/probability\/Distribution.html#domain:Set[A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/probability\/Distribution.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/probability\/Distribution.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/probability\/Distribution.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/probability\/Distribution.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/probability\/Distribution.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/probability\/Distribution.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/probability\/Distribution.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/probability\/Distribution.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/probability\/Distribution.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/Distribution.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/Distribution.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/Distribution.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/probability\/Distribution.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/probability\/Distribution.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/probability\/Distribution.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/probability\/Distribution.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/probability\/Distribution.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/probability\/Distribution.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/probability\/Distribution.html", "kind" : "case class"}, {"name" : "mathlib.probability.DistributionHelpers", "shortDescription" : "Helpers for Distribution and ConditionalDistribution.", "object" : "mathlib\/probability\/DistributionHelpers$.html", "members_object" : [{"label" : "log", "tail" : "(distribution: ConditionalDistribution[A, B]): ConditionalDistribution[A, B]", "member" : "mathlib.probability.DistributionHelpers.log", "link" : "mathlib\/probability\/DistributionHelpers$.html#log[A,B](distribution:mathlib.probability.ConditionalDistribution[A,B]):mathlib.probability.ConditionalDistribution[A,B]", "kind" : "def"}, {"label" : "exp", "tail" : "(distribution: ConditionalDistribution[A, B]): ConditionalDistribution[A, B]", "member" : "mathlib.probability.DistributionHelpers.exp", "link" : "mathlib\/probability\/DistributionHelpers$.html#exp[A,B](distribution:mathlib.probability.ConditionalDistribution[A,B]):mathlib.probability.ConditionalDistribution[A,B]", "kind" : "def"}, {"label" : "log", "tail" : "(distribution: Distribution[A]): Distribution[A]", "member" : "mathlib.probability.DistributionHelpers.log", "link" : "mathlib\/probability\/DistributionHelpers$.html#log[A](distribution:mathlib.probability.Distribution[A]):mathlib.probability.Distribution[A]", "kind" : "def"}, {"label" : "exp", "tail" : "(distribution: Distribution[A]): Distribution[A]", "member" : "mathlib.probability.DistributionHelpers.exp", "link" : "mathlib\/probability\/DistributionHelpers$.html#exp[A](distribution:mathlib.probability.Distribution[A]):mathlib.probability.Distribution[A]", "kind" : "def"}, {"label" : "pr", "tail" : "(given: B, distribution: ConditionalDistribution[A, B]): Distribution[A]", "member" : "mathlib.probability.DistributionHelpers.pr", "link" : "mathlib\/probability\/DistributionHelpers$.html#pr[A,B](given:B,distribution:mathlib.probability.ConditionalDistribution[A,B]):mathlib.probability.Distribution[A]", "kind" : "def"}, {"label" : "prValue", "tail" : "(value: A, distribution: ConditionalDistribution[A, B]): Double", "member" : "mathlib.probability.DistributionHelpers.prValue", "link" : "mathlib\/probability\/DistributionHelpers$.html#prValue[A,B](value:A,distribution:mathlib.probability.ConditionalDistribution[A,B]):Double", "kind" : "def"}, {"label" : "pr", "tail" : "(conditional: Conditional1[A, B], distribution: ConditionalDistribution[A, B]): Double", "member" : "mathlib.probability.DistributionHelpers.pr", "link" : "mathlib\/probability\/DistributionHelpers$.html#pr[A,B](conditional:mathlib.probability.Conditional1[A,B],distribution:mathlib.probability.ConditionalDistribution[A,B]):Double", "kind" : "def"}, {"label" : "pr", "tail" : "(value: A, distribution: Distribution[A]): Double", "member" : "mathlib.probability.DistributionHelpers.pr", "link" : "mathlib\/probability\/DistributionHelpers$.html#pr[A](value:A,distribution:mathlib.probability.Distribution[A]):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/probability\/DistributionHelpers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/probability\/DistributionHelpers$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/probability\/DistributionHelpers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/probability\/DistributionHelpers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/probability\/DistributionHelpers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/probability\/DistributionHelpers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/probability\/DistributionHelpers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/DistributionHelpers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/DistributionHelpers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/DistributionHelpers$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/probability\/DistributionHelpers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/probability\/DistributionHelpers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "mathlib\/probability\/DistributionHelpers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/probability\/DistributionHelpers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/probability\/DistributionHelpers$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "mathlib\/probability\/DistributionHelpers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/probability\/DistributionHelpers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/probability\/DistributionHelpers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/probability\/DistributionHelpers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "mathlib.probability.Implicits", "shortDescription" : "Implicit functions for more concise syntax.", "object" : "mathlib\/probability\/Implicits$.html", "members_object" : [{"label" : "ImplInt", "tail" : "", "member" : "mathlib.probability.Implicits.ImplInt", "link" : "mathlib\/probability\/Implicits$.html#ImplIntextendsAnyRef", "kind" : "implicit class"}, {"label" : "ImplDouble", "tail" : "", "member" : "mathlib.probability.Implicits.ImplDouble", "link" : "mathlib\/probability\/Implicits$.html#ImplDoubleextendsAnyRef", "kind" : "implicit class"}, {"label" : "ImplConditional", "tail" : "", "member" : "mathlib.probability.Implicits.ImplConditional", "link" : "mathlib\/probability\/Implicits$.html#ImplConditional[A]extendsAnyRef", "kind" : "implicit class"}, {"label" : "ImplDistributionConstruct", "tail" : "", "member" : "mathlib.probability.Implicits.ImplDistributionConstruct", "link" : "mathlib\/probability\/Implicits$.html#ImplDistributionConstruct[A]extendsAnyRef", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/probability\/Implicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/probability\/Implicits$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/probability\/Implicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/probability\/Implicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/probability\/Implicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/probability\/Implicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/probability\/Implicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/Implicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/Implicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/probability\/Implicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/probability\/Implicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/probability\/Implicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "mathlib\/probability\/Implicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/probability\/Implicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/probability\/Implicits$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "mathlib\/probability\/Implicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/probability\/Implicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/probability\/Implicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/probability\/Implicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "mathlib.graph.hyper" : [{"name" : "mathlib.graph.hyper.DiHyperEdge", "shortDescription" : "Represents a directed hyper edge.", "members_case class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "mathlib.graph.hyper.DiHyperEdge.hashCode", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "mathlib.graph.hyper.DiHyperEdge.equals", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "mathlib.graph.hyper.DiHyperEdge.canEqual", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"member" : "mathlib.graph.hyper.DiHyperEdge#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": Set[T]", "member" : "mathlib.graph.hyper.DiHyperEdge.right", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#right:Set[T]", "kind" : "val"}, {"label" : "left", "tail" : ": Set[T]", "member" : "mathlib.graph.hyper.DiHyperEdge.left", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#left:Set[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "contains", "tail" : "(vertices: Set[T]): Boolean", "member" : "mathlib.graph.properties.HyperEdge.contains", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#contains(vertices:Set[T]):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(vertex: T): Boolean", "member" : "mathlib.graph.properties.HyperEdge.contains", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#contains(vertex:T):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/hyper\/DiHyperEdge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/graph\/hyper\/DiHyperEdge.html", "kind" : "case class"}, {"name" : "mathlib.graph.hyper.DiHyperGraph", "case object" : "mathlib\/graph\/hyper\/DiHyperGraph$.html", "shortDescription" : "Represents a directed hyper graph.", "members_case object" : [{"label" : "apply", "tail" : "(vertices: Set[T], edges: Set[DiHyperEdge[Node[T]]])(arg0: ClassTag[X]): DiHyperGraph[T]", "member" : "mathlib.graph.hyper.DiHyperGraph.apply", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html#apply[T,X](vertices:Set[T],edges:Set[mathlib.graph.hyper.DiHyperEdge[mathlib.graph.Node[T]]])(implicitevidence$4:scala.reflect.ClassTag[X]):mathlib.graph.hyper.DiHyperGraph[T]", "kind" : "def"}, {"label" : "empty", "tail" : "(): DiHyperGraph[T]", "member" : "mathlib.graph.hyper.DiHyperGraph.empty", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html#empty[T]:mathlib.graph.hyper.DiHyperGraph[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(edges: Set[DiHyperEdge[Node[T]]])(arg0: ClassTag[X]): DiHyperGraph[T]", "member" : "mathlib.graph.hyper.DiHyperGraph.apply", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html#apply[T,X](edges:Set[mathlib.graph.hyper.DiHyperEdge[mathlib.graph.Node[T]]])(implicitevidence$3:scala.reflect.ClassTag[X]):mathlib.graph.hyper.DiHyperGraph[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(vertices: Set[Node[T]]): DiHyperGraph[T]", "member" : "mathlib.graph.hyper.DiHyperGraph.apply", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html#apply[T](vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.hyper.DiHyperGraph[T]", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/hyper\/DiHyperGraph$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "merge", "tail" : "(that: G): DiHyperGraph[T]", "member" : "mathlib.graph.hyper.DiHyperGraph.merge", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#merge[G<:mathlib.graph.hyper.HyperGraph[T,mathlib.graph.hyper.DiHyperEdge[mathlib.graph.Node[T]]]](that:G):mathlib.graph.hyper.DiHyperGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(_edges: Set[DiHyperEdge[Node[T]]])(arg0: ClassTag[X]): DiHyperGraph[T]", "member" : "mathlib.graph.hyper.DiHyperGraph.-", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#-[X](_edges:Set[mathlib.graph.hyper.DiHyperEdge[mathlib.graph.Node[T]]])(implicitevidence$2:scala.reflect.ClassTag[X]):mathlib.graph.hyper.DiHyperGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(edge: DiHyperEdge[Node[T]]): DiHyperGraph[T]", "member" : "mathlib.graph.hyper.DiHyperGraph.-", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#-(edge:mathlib.graph.hyper.DiHyperEdge[mathlib.graph.Node[T]]):mathlib.graph.hyper.DiHyperGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(_vertices: Set[Node[T]]): DiHyperGraph[T]", "member" : "mathlib.graph.hyper.DiHyperGraph.-", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#-(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.hyper.DiHyperGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(vertex: Node[T]): DiHyperGraph[T]", "member" : "mathlib.graph.hyper.DiHyperGraph.-", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#-(vertex:mathlib.graph.Node[T]):mathlib.graph.hyper.DiHyperGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(_edges: Set[DiHyperEdge[Node[T]]])(arg0: ClassTag[X]): DiHyperGraph[T]", "member" : "mathlib.graph.hyper.DiHyperGraph.+", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#+[X](_edges:Set[mathlib.graph.hyper.DiHyperEdge[mathlib.graph.Node[T]]])(implicitevidence$1:scala.reflect.ClassTag[X]):mathlib.graph.hyper.DiHyperGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(edge: DiHyperEdge[Node[T]]): DiHyperGraph[T]", "member" : "mathlib.graph.hyper.DiHyperGraph.+", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#+(edge:mathlib.graph.hyper.DiHyperEdge[mathlib.graph.Node[T]]):mathlib.graph.hyper.DiHyperGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(_vertices: Set[Node[T]]): DiHyperGraph[T]", "member" : "mathlib.graph.hyper.DiHyperGraph.+", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#+(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.hyper.DiHyperGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(vertex: Node[T]): DiHyperGraph[T]", "member" : "mathlib.graph.hyper.DiHyperGraph.+", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#+(vertex:mathlib.graph.Node[T]):mathlib.graph.hyper.DiHyperGraph[T]", "kind" : "def"}, {"member" : "mathlib.graph.hyper.DiHyperGraph#<init>", "error" : "unsupported entity"}, {"label" : "edges", "tail" : ": Set[DiHyperEdge[Node[T]]]", "member" : "mathlib.graph.hyper.DiHyperGraph.edges", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#edges:Set[mathlib.graph.hyper.DiHyperEdge[mathlib.graph.Node[T]]]", "kind" : "val"}, {"label" : "vertices", "tail" : ": Set[Node[T]]", "member" : "mathlib.graph.hyper.DiHyperGraph.vertices", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#vertices:Set[mathlib.graph.Node[T]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "noEdges", "tail" : "(): Boolean", "member" : "mathlib.graph.hyper.HyperGraph.noEdges", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#noEdges:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "mathlib.graph.hyper.HyperGraph.isEmpty", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "mathlib.graph.hyper.HyperGraph.size", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#size:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/hyper\/DiHyperGraph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/graph\/hyper\/DiHyperGraph.html", "kind" : "case class"}, {"name" : "mathlib.graph.hyper.HyperGraph", "shortDescription" : "Represents an abstract hyper graph.", "members_class" : [{"label" : "noEdges", "tail" : "(): Boolean", "member" : "mathlib.graph.hyper.HyperGraph.noEdges", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#noEdges:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "mathlib.graph.hyper.HyperGraph.isEmpty", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "mathlib.graph.hyper.HyperGraph.size", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#size:Int", "kind" : "def"}, {"member" : "mathlib.graph.hyper.HyperGraph#<init>", "error" : "unsupported entity"}, {"label" : "edges", "tail" : ": Set[E]", "member" : "mathlib.graph.hyper.HyperGraph.edges", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#edges:Set[E]", "kind" : "val"}, {"label" : "vertices", "tail" : ": Set[Node[T]]", "member" : "mathlib.graph.hyper.HyperGraph.vertices", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#vertices:Set[mathlib.graph.Node[T]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/hyper\/HyperGraph.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "merge", "tail" : "(that: G): HyperGraph[T, E]", "member" : "mathlib.graph.hyper.HyperGraph.merge", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#merge[G<:mathlib.graph.hyper.HyperGraph[T,E]](that:G):mathlib.graph.hyper.HyperGraph[T,E]", "kind" : "abstract def"}, {"label" : "-", "tail" : "(_edges: Set[E])(arg0: ClassTag[X]): HyperGraph[T, E]", "member" : "mathlib.graph.hyper.HyperGraph.-", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#-[X](_edges:Set[E])(implicitevidence$2:scala.reflect.ClassTag[X]):mathlib.graph.hyper.HyperGraph[T,E]", "kind" : "abstract def"}, {"label" : "-", "tail" : "(edge: E): HyperGraph[T, E]", "member" : "mathlib.graph.hyper.HyperGraph.-", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#-(edge:E):mathlib.graph.hyper.HyperGraph[T,E]", "kind" : "abstract def"}, {"label" : "-", "tail" : "(_vertices: Set[Node[T]]): HyperGraph[T, E]", "member" : "mathlib.graph.hyper.HyperGraph.-", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#-(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.hyper.HyperGraph[T,E]", "kind" : "abstract def"}, {"label" : "-", "tail" : "(vertex: Node[T]): HyperGraph[T, E]", "member" : "mathlib.graph.hyper.HyperGraph.-", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#-(vertex:mathlib.graph.Node[T]):mathlib.graph.hyper.HyperGraph[T,E]", "kind" : "abstract def"}, {"label" : "+", "tail" : "(_edges: Set[E])(arg0: ClassTag[X]): HyperGraph[T, E]", "member" : "mathlib.graph.hyper.HyperGraph.+", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#+[X](_edges:Set[E])(implicitevidence$1:scala.reflect.ClassTag[X]):mathlib.graph.hyper.HyperGraph[T,E]", "kind" : "abstract def"}, {"label" : "+", "tail" : "(edge: E): HyperGraph[T, E]", "member" : "mathlib.graph.hyper.HyperGraph.+", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#+(edge:E):mathlib.graph.hyper.HyperGraph[T,E]", "kind" : "abstract def"}, {"label" : "+", "tail" : "(_vertices: Set[Node[T]]): HyperGraph[T, E]", "member" : "mathlib.graph.hyper.HyperGraph.+", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#+(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.hyper.HyperGraph[T,E]", "kind" : "abstract def"}, {"label" : "+", "tail" : "(vertex: Node[T]): HyperGraph[T, E]", "member" : "mathlib.graph.hyper.HyperGraph.+", "link" : "mathlib\/graph\/hyper\/HyperGraph.html#+(vertex:mathlib.graph.Node[T]):mathlib.graph.hyper.HyperGraph[T,E]", "kind" : "abstract def"}], "class" : "mathlib\/graph\/hyper\/HyperGraph.html", "kind" : "class"}, {"name" : "mathlib.graph.hyper.UnDiHyperEdge", "shortDescription" : "Represents a directed hyper edge.", "members_case class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "mathlib.graph.hyper.UnDiHyperEdge.hashCode", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "mathlib.graph.hyper.UnDiHyperEdge.equals", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "mathlib.graph.hyper.UnDiHyperEdge.canEqual", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"member" : "mathlib.graph.hyper.UnDiHyperEdge#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": Set[T]", "member" : "mathlib.graph.hyper.UnDiHyperEdge.right", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#right:Set[T]", "kind" : "val"}, {"label" : "left", "tail" : ": Set[T]", "member" : "mathlib.graph.hyper.UnDiHyperEdge.left", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#left:Set[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "contains", "tail" : "(vertices: Set[T]): Boolean", "member" : "mathlib.graph.properties.HyperEdge.contains", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#contains(vertices:Set[T]):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(vertex: T): Boolean", "member" : "mathlib.graph.properties.HyperEdge.contains", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#contains(vertex:T):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/graph\/hyper\/UnDiHyperEdge.html", "kind" : "case class"}, {"name" : "mathlib.graph.hyper.UnDiHyperGraph", "case object" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html", "shortDescription" : "Represents an undirected hyper graph.", "members_case object" : [{"label" : "apply", "tail" : "(vertices: Set[T], edges: Set[UnDiHyperEdge[Node[T]]])(arg0: ClassTag[X]): UnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.UnDiHyperGraph.apply", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html#apply[T,X](vertices:Set[T],edges:Set[mathlib.graph.hyper.UnDiHyperEdge[mathlib.graph.Node[T]]])(implicitevidence$4:scala.reflect.ClassTag[X]):mathlib.graph.hyper.UnDiHyperGraph[T]", "kind" : "def"}, {"label" : "empty", "tail" : "(): UnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.UnDiHyperGraph.empty", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html#empty[T]:mathlib.graph.hyper.UnDiHyperGraph[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(edges: Set[UnDiHyperEdge[Node[T]]])(arg0: ClassTag[X]): UnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.UnDiHyperGraph.apply", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html#apply[T,X](edges:Set[mathlib.graph.hyper.UnDiHyperEdge[mathlib.graph.Node[T]]])(implicitevidence$3:scala.reflect.ClassTag[X]):mathlib.graph.hyper.UnDiHyperGraph[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(vertices: Set[Node[T]]): UnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.UnDiHyperGraph.apply", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html#apply[T](vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.hyper.UnDiHyperGraph[T]", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "merge", "tail" : "(that: G): UnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.UnDiHyperGraph.merge", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#merge[G<:mathlib.graph.hyper.HyperGraph[T,mathlib.graph.hyper.UnDiHyperEdge[mathlib.graph.Node[T]]]](that:G):mathlib.graph.hyper.UnDiHyperGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(_edges: Set[UnDiHyperEdge[Node[T]]])(arg0: ClassTag[X]): UnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.UnDiHyperGraph.-", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#-[X](_edges:Set[mathlib.graph.hyper.UnDiHyperEdge[mathlib.graph.Node[T]]])(implicitevidence$2:scala.reflect.ClassTag[X]):mathlib.graph.hyper.UnDiHyperGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(edge: UnDiHyperEdge[Node[T]]): UnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.UnDiHyperGraph.-", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#-(edge:mathlib.graph.hyper.UnDiHyperEdge[mathlib.graph.Node[T]]):mathlib.graph.hyper.UnDiHyperGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(_vertices: Set[Node[T]]): UnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.UnDiHyperGraph.-", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#-(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.hyper.UnDiHyperGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(vertex: Node[T]): UnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.UnDiHyperGraph.-", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#-(vertex:mathlib.graph.Node[T]):mathlib.graph.hyper.UnDiHyperGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(_edges: Set[UnDiHyperEdge[Node[T]]])(arg0: ClassTag[X]): UnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.UnDiHyperGraph.+", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#+[X](_edges:Set[mathlib.graph.hyper.UnDiHyperEdge[mathlib.graph.Node[T]]])(implicitevidence$1:scala.reflect.ClassTag[X]):mathlib.graph.hyper.UnDiHyperGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(edge: UnDiHyperEdge[Node[T]]): UnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.UnDiHyperGraph.+", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#+(edge:mathlib.graph.hyper.UnDiHyperEdge[mathlib.graph.Node[T]]):mathlib.graph.hyper.UnDiHyperGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(_vertices: Set[Node[T]]): UnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.UnDiHyperGraph.+", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#+(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.hyper.UnDiHyperGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(vertex: Node[T]): UnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.UnDiHyperGraph.+", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#+(vertex:mathlib.graph.Node[T]):mathlib.graph.hyper.UnDiHyperGraph[T]", "kind" : "def"}, {"member" : "mathlib.graph.hyper.UnDiHyperGraph#<init>", "error" : "unsupported entity"}, {"label" : "edges", "tail" : ": Set[UnDiHyperEdge[Node[T]]]", "member" : "mathlib.graph.hyper.UnDiHyperGraph.edges", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#edges:Set[mathlib.graph.hyper.UnDiHyperEdge[mathlib.graph.Node[T]]]", "kind" : "val"}, {"label" : "vertices", "tail" : ": Set[Node[T]]", "member" : "mathlib.graph.hyper.UnDiHyperGraph.vertices", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#vertices:Set[mathlib.graph.Node[T]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "noEdges", "tail" : "(): Boolean", "member" : "mathlib.graph.hyper.HyperGraph.noEdges", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#noEdges:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "mathlib.graph.hyper.HyperGraph.isEmpty", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "mathlib.graph.hyper.HyperGraph.size", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#size:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/graph\/hyper\/UnDiHyperGraph.html", "kind" : "case class"}, {"name" : "mathlib.graph.hyper.WDiHyperEdge", "shortDescription" : "Represents a weighted directed hyper edge.", "members_case class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "mathlib.graph.hyper.WDiHyperEdge.hashCode", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "mathlib.graph.hyper.WDiHyperEdge.equals", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "mathlib.graph.hyper.WDiHyperEdge.canEqual", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"member" : "mathlib.graph.hyper.WDiHyperEdge#<init>", "error" : "unsupported entity"}, {"label" : "weight", "tail" : ": Double", "member" : "mathlib.graph.hyper.WDiHyperEdge.weight", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#weight:Double", "kind" : "val"}, {"label" : "right", "tail" : ": Set[T]", "member" : "mathlib.graph.hyper.WDiHyperEdge.right", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#right:Set[T]", "kind" : "val"}, {"label" : "left", "tail" : ": Set[T]", "member" : "mathlib.graph.hyper.WDiHyperEdge.left", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#left:Set[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "contains", "tail" : "(vertices: Set[T]): Boolean", "member" : "mathlib.graph.properties.HyperEdge.contains", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#contains(vertices:Set[T]):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(vertex: T): Boolean", "member" : "mathlib.graph.properties.HyperEdge.contains", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#contains(vertex:T):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/hyper\/WDiHyperEdge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/graph\/hyper\/WDiHyperEdge.html", "kind" : "case class"}, {"name" : "mathlib.graph.hyper.WDiHyperGraph", "case object" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html", "shortDescription" : "Represents a weighted directed hyper graph.", "members_case object" : [{"label" : "apply", "tail" : "(vertices: Set[T], edges: Set[WDiHyperEdge[Node[T]]])(arg0: ClassTag[X]): WDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WDiHyperGraph.apply", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html#apply[T,X](vertices:Set[T],edges:Set[mathlib.graph.hyper.WDiHyperEdge[mathlib.graph.Node[T]]])(implicitevidence$4:scala.reflect.ClassTag[X]):mathlib.graph.hyper.WDiHyperGraph[T]", "kind" : "def"}, {"label" : "empty", "tail" : "(): WDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WDiHyperGraph.empty", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html#empty[T]:mathlib.graph.hyper.WDiHyperGraph[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(edges: Set[WDiHyperEdge[Node[T]]])(arg0: ClassTag[X]): WDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WDiHyperGraph.apply", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html#apply[T,X](edges:Set[mathlib.graph.hyper.WDiHyperEdge[mathlib.graph.Node[T]]])(implicitevidence$3:scala.reflect.ClassTag[X]):mathlib.graph.hyper.WDiHyperGraph[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(vertices: Set[Node[T]]): WDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WDiHyperGraph.apply", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html#apply[T](vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.hyper.WDiHyperGraph[T]", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "merge", "tail" : "(that: G): WDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WDiHyperGraph.merge", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#merge[G<:mathlib.graph.hyper.HyperGraph[T,mathlib.graph.hyper.WDiHyperEdge[mathlib.graph.Node[T]]]](that:G):mathlib.graph.hyper.WDiHyperGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(_edges: Set[WDiHyperEdge[Node[T]]])(arg0: ClassTag[X]): WDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WDiHyperGraph.-", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#-[X](_edges:Set[mathlib.graph.hyper.WDiHyperEdge[mathlib.graph.Node[T]]])(implicitevidence$2:scala.reflect.ClassTag[X]):mathlib.graph.hyper.WDiHyperGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(edge: WDiHyperEdge[Node[T]]): WDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WDiHyperGraph.-", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#-(edge:mathlib.graph.hyper.WDiHyperEdge[mathlib.graph.Node[T]]):mathlib.graph.hyper.WDiHyperGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(_vertices: Set[Node[T]]): WDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WDiHyperGraph.-", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#-(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.hyper.WDiHyperGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(vertex: Node[T]): WDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WDiHyperGraph.-", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#-(vertex:mathlib.graph.Node[T]):mathlib.graph.hyper.WDiHyperGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(_edges: Set[WDiHyperEdge[Node[T]]])(arg0: ClassTag[X]): WDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WDiHyperGraph.+", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#+[X](_edges:Set[mathlib.graph.hyper.WDiHyperEdge[mathlib.graph.Node[T]]])(implicitevidence$1:scala.reflect.ClassTag[X]):mathlib.graph.hyper.WDiHyperGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(edge: WDiHyperEdge[Node[T]]): WDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WDiHyperGraph.+", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#+(edge:mathlib.graph.hyper.WDiHyperEdge[mathlib.graph.Node[T]]):mathlib.graph.hyper.WDiHyperGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(_vertices: Set[Node[T]]): WDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WDiHyperGraph.+", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#+(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.hyper.WDiHyperGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(vertex: Node[T]): WDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WDiHyperGraph.+", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#+(vertex:mathlib.graph.Node[T]):mathlib.graph.hyper.WDiHyperGraph[T]", "kind" : "def"}, {"member" : "mathlib.graph.hyper.WDiHyperGraph#<init>", "error" : "unsupported entity"}, {"label" : "edges", "tail" : ": Set[WDiHyperEdge[Node[T]]]", "member" : "mathlib.graph.hyper.WDiHyperGraph.edges", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#edges:Set[mathlib.graph.hyper.WDiHyperEdge[mathlib.graph.Node[T]]]", "kind" : "val"}, {"label" : "vertices", "tail" : ": Set[Node[T]]", "member" : "mathlib.graph.hyper.WDiHyperGraph.vertices", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#vertices:Set[mathlib.graph.Node[T]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "noEdges", "tail" : "(): Boolean", "member" : "mathlib.graph.hyper.HyperGraph.noEdges", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#noEdges:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "mathlib.graph.hyper.HyperGraph.isEmpty", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "mathlib.graph.hyper.HyperGraph.size", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#size:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/hyper\/WDiHyperGraph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/graph\/hyper\/WDiHyperGraph.html", "kind" : "case class"}, {"name" : "mathlib.graph.hyper.WUnDiHyperEdge", "shortDescription" : "Represents a weighted undirected hyper edge.", "members_case class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "mathlib.graph.hyper.WUnDiHyperEdge.hashCode", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "mathlib.graph.hyper.WUnDiHyperEdge.equals", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "mathlib.graph.hyper.WUnDiHyperEdge.canEqual", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"member" : "mathlib.graph.hyper.WUnDiHyperEdge#<init>", "error" : "unsupported entity"}, {"label" : "weight", "tail" : ": Double", "member" : "mathlib.graph.hyper.WUnDiHyperEdge.weight", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#weight:Double", "kind" : "val"}, {"label" : "right", "tail" : ": Set[T]", "member" : "mathlib.graph.hyper.WUnDiHyperEdge.right", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#right:Set[T]", "kind" : "val"}, {"label" : "left", "tail" : ": Set[T]", "member" : "mathlib.graph.hyper.WUnDiHyperEdge.left", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#left:Set[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "contains", "tail" : "(vertices: Set[T]): Boolean", "member" : "mathlib.graph.properties.HyperEdge.contains", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#contains(vertices:Set[T]):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(vertex: T): Boolean", "member" : "mathlib.graph.properties.HyperEdge.contains", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#contains(vertex:T):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/graph\/hyper\/WUnDiHyperEdge.html", "kind" : "case class"}, {"name" : "mathlib.graph.hyper.WUnDiHyperGraph", "case object" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html", "shortDescription" : "Represents a weighted undirected hyper graph.", "members_case object" : [{"label" : "apply", "tail" : "(vertices: Set[T], edges: Set[WUnDiHyperEdge[Node[T]]])(arg0: ClassTag[X]): WUnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WUnDiHyperGraph.apply", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html#apply[T,X](vertices:Set[T],edges:Set[mathlib.graph.hyper.WUnDiHyperEdge[mathlib.graph.Node[T]]])(implicitevidence$4:scala.reflect.ClassTag[X]):mathlib.graph.hyper.WUnDiHyperGraph[T]", "kind" : "def"}, {"label" : "empty", "tail" : "(): WUnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WUnDiHyperGraph.empty", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html#empty[T]:mathlib.graph.hyper.WUnDiHyperGraph[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(edges: Set[WUnDiHyperEdge[Node[T]]])(arg0: ClassTag[X]): WUnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WUnDiHyperGraph.apply", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html#apply[T,X](edges:Set[mathlib.graph.hyper.WUnDiHyperEdge[mathlib.graph.Node[T]]])(implicitevidence$3:scala.reflect.ClassTag[X]):mathlib.graph.hyper.WUnDiHyperGraph[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(vertices: Set[Node[T]]): WUnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WUnDiHyperGraph.apply", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html#apply[T](vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.hyper.WUnDiHyperGraph[T]", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "merge", "tail" : "(that: G): WUnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WUnDiHyperGraph.merge", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#merge[G<:mathlib.graph.hyper.HyperGraph[T,mathlib.graph.hyper.WUnDiHyperEdge[mathlib.graph.Node[T]]]](that:G):mathlib.graph.hyper.WUnDiHyperGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(_edges: Set[WUnDiHyperEdge[Node[T]]])(arg0: ClassTag[X]): WUnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WUnDiHyperGraph.-", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#-[X](_edges:Set[mathlib.graph.hyper.WUnDiHyperEdge[mathlib.graph.Node[T]]])(implicitevidence$2:scala.reflect.ClassTag[X]):mathlib.graph.hyper.WUnDiHyperGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(edge: WUnDiHyperEdge[Node[T]]): WUnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WUnDiHyperGraph.-", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#-(edge:mathlib.graph.hyper.WUnDiHyperEdge[mathlib.graph.Node[T]]):mathlib.graph.hyper.WUnDiHyperGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(_vertices: Set[Node[T]]): WUnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WUnDiHyperGraph.-", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#-(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.hyper.WUnDiHyperGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(vertex: Node[T]): WUnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WUnDiHyperGraph.-", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#-(vertex:mathlib.graph.Node[T]):mathlib.graph.hyper.WUnDiHyperGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(_edges: Set[WUnDiHyperEdge[Node[T]]])(arg0: ClassTag[X]): WUnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WUnDiHyperGraph.+", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#+[X](_edges:Set[mathlib.graph.hyper.WUnDiHyperEdge[mathlib.graph.Node[T]]])(implicitevidence$1:scala.reflect.ClassTag[X]):mathlib.graph.hyper.WUnDiHyperGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(edge: WUnDiHyperEdge[Node[T]]): WUnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WUnDiHyperGraph.+", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#+(edge:mathlib.graph.hyper.WUnDiHyperEdge[mathlib.graph.Node[T]]):mathlib.graph.hyper.WUnDiHyperGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(_vertices: Set[Node[T]]): WUnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WUnDiHyperGraph.+", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#+(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.hyper.WUnDiHyperGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(vertex: Node[T]): WUnDiHyperGraph[T]", "member" : "mathlib.graph.hyper.WUnDiHyperGraph.+", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#+(vertex:mathlib.graph.Node[T]):mathlib.graph.hyper.WUnDiHyperGraph[T]", "kind" : "def"}, {"member" : "mathlib.graph.hyper.WUnDiHyperGraph#<init>", "error" : "unsupported entity"}, {"label" : "edges", "tail" : ": Set[WUnDiHyperEdge[Node[T]]]", "member" : "mathlib.graph.hyper.WUnDiHyperGraph.edges", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#edges:Set[mathlib.graph.hyper.WUnDiHyperEdge[mathlib.graph.Node[T]]]", "kind" : "val"}, {"label" : "vertices", "tail" : ": Set[Node[T]]", "member" : "mathlib.graph.hyper.WUnDiHyperGraph.vertices", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#vertices:Set[mathlib.graph.Node[T]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "noEdges", "tail" : "(): Boolean", "member" : "mathlib.graph.hyper.HyperGraph.noEdges", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#noEdges:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "mathlib.graph.hyper.HyperGraph.isEmpty", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "mathlib.graph.hyper.HyperGraph.size", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#size:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/graph\/hyper\/WUnDiHyperGraph.html", "kind" : "case class"}], "mathlib.graph" : [{"name" : "mathlib.graph.DiEdge", "shortDescription" : "Represents a directed edge.", "members_case class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "mathlib.graph.DiEdge.hashCode", "link" : "mathlib\/graph\/DiEdge.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "mathlib.graph.DiEdge.equals", "link" : "mathlib\/graph\/DiEdge.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "mathlib.graph.DiEdge.canEqual", "link" : "mathlib\/graph\/DiEdge.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "getNeighborOf", "tail" : "(vertex: T): Option[T]", "member" : "mathlib.graph.DiEdge.getNeighborOf", "link" : "mathlib\/graph\/DiEdge.html#getNeighborOf(vertex:T):Option[T]", "kind" : "def"}, {"member" : "mathlib.graph.DiEdge#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": T", "member" : "mathlib.graph.DiEdge.right", "link" : "mathlib\/graph\/DiEdge.html#right:T", "kind" : "val"}, {"label" : "left", "tail" : ": T", "member" : "mathlib.graph.DiEdge.left", "link" : "mathlib\/graph\/DiEdge.html#left:T", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/DiEdge.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/DiEdge.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "contains", "tail" : "(vertex: T): Boolean", "member" : "mathlib.graph.properties.Edge.contains", "link" : "mathlib\/graph\/DiEdge.html#contains(vertex:T):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/DiEdge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/DiEdge.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/DiEdge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/DiEdge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/DiEdge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/DiEdge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/DiEdge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/DiEdge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/DiEdge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/DiEdge.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/DiEdge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/DiEdge.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/DiEdge.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/DiEdge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/DiEdge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/DiEdge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/graph\/DiEdge.html", "kind" : "case class"}, {"name" : "mathlib.graph.DiGraph", "case object" : "mathlib\/graph\/DiGraph$.html", "shortDescription" : "Represents an unweighted directed graph.", "members_case object" : [{"label" : "uniform", "tail" : "(n: Int, numberEdges: Int): DiGraph[String]", "member" : "mathlib.graph.DiGraph.uniform", "link" : "mathlib\/graph\/DiGraph$.html#uniform(n:Int,numberEdges:Int):mathlib.graph.DiGraph[String]", "kind" : "def"}, {"label" : "uniform", "tail" : "(objects: Set[T], numberEdges: Int): DiGraph[T]", "member" : "mathlib.graph.DiGraph.uniform", "link" : "mathlib\/graph\/DiGraph$.html#uniform[T](objects:Set[T],numberEdges:Int):mathlib.graph.DiGraph[T]", "kind" : "def"}, {"label" : "random", "tail" : "(n: Int, p: Double): DiGraph[String]", "member" : "mathlib.graph.DiGraph.random", "link" : "mathlib\/graph\/DiGraph$.html#random(n:Int,p:Double):mathlib.graph.DiGraph[String]", "kind" : "def"}, {"label" : "random", "tail" : "(objects: Set[T], p: Double): DiGraph[T]", "member" : "mathlib.graph.DiGraph.random", "link" : "mathlib\/graph\/DiGraph$.html#random[T](objects:Set[T],p:Double):mathlib.graph.DiGraph[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(vertices: Set[T], edges: Set[DiEdge[Node[T]]])(arg0: ClassTag[X]): DiGraph[T]", "member" : "mathlib.graph.DiGraph.apply", "link" : "mathlib\/graph\/DiGraph$.html#apply[T,X](vertices:Set[T],edges:Set[mathlib.graph.DiEdge[mathlib.graph.Node[T]]])(implicitevidence$4:scala.reflect.ClassTag[X]):mathlib.graph.DiGraph[T]", "kind" : "def"}, {"label" : "empty", "tail" : "(): DiGraph[T]", "member" : "mathlib.graph.DiGraph.empty", "link" : "mathlib\/graph\/DiGraph$.html#empty[T]:mathlib.graph.DiGraph[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(edges: Set[DiEdge[Node[T]]])(arg0: ClassTag[X]): DiGraph[T]", "member" : "mathlib.graph.DiGraph.apply", "link" : "mathlib\/graph\/DiGraph$.html#apply[T,X](edges:Set[mathlib.graph.DiEdge[mathlib.graph.Node[T]]])(implicitevidence$3:scala.reflect.ClassTag[X]):mathlib.graph.DiGraph[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(vertices: Set[Node[T]]): DiGraph[T]", "member" : "mathlib.graph.DiGraph.apply", "link" : "mathlib\/graph\/DiGraph$.html#apply[T](vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.DiGraph[T]", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/DiGraph$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "mathlib\/graph\/DiGraph$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/DiGraph$.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/DiGraph$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/DiGraph$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/DiGraph$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/DiGraph$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/DiGraph$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/DiGraph$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/DiGraph$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/DiGraph$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/DiGraph$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/DiGraph$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/DiGraph$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/DiGraph$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/DiGraph$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/graph\/DiGraph$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/DiGraph$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/DiGraph$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/DiGraph$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "merge", "tail" : "(that: G): DiGraph[T]", "member" : "mathlib.graph.DiGraph.merge", "link" : "mathlib\/graph\/DiGraph.html#merge[G<:mathlib.graph.Graph[T,mathlib.graph.DiEdge[mathlib.graph.Node[T]]]](that:G):mathlib.graph.DiGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(_edges: Set[DiEdge[Node[T]]])(arg0: ClassTag[X]): DiGraph[T]", "member" : "mathlib.graph.DiGraph.-", "link" : "mathlib\/graph\/DiGraph.html#-[X](_edges:Set[mathlib.graph.DiEdge[mathlib.graph.Node[T]]])(implicitevidence$2:scala.reflect.ClassTag[X]):mathlib.graph.DiGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(edge: DiEdge[Node[T]]): DiGraph[T]", "member" : "mathlib.graph.DiGraph.-", "link" : "mathlib\/graph\/DiGraph.html#-(edge:mathlib.graph.DiEdge[mathlib.graph.Node[T]]):mathlib.graph.DiGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(_vertices: Set[Node[T]]): DiGraph[T]", "member" : "mathlib.graph.DiGraph.-", "link" : "mathlib\/graph\/DiGraph.html#-(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.DiGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(vertex: Node[T]): DiGraph[T]", "member" : "mathlib.graph.DiGraph.-", "link" : "mathlib\/graph\/DiGraph.html#-(vertex:mathlib.graph.Node[T]):mathlib.graph.DiGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(_edges: Set[DiEdge[Node[T]]])(arg0: ClassTag[X]): DiGraph[T]", "member" : "mathlib.graph.DiGraph.+", "link" : "mathlib\/graph\/DiGraph.html#+[X](_edges:Set[mathlib.graph.DiEdge[mathlib.graph.Node[T]]])(implicitevidence$1:scala.reflect.ClassTag[X]):mathlib.graph.DiGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(edge: DiEdge[Node[T]]): DiGraph[T]", "member" : "mathlib.graph.DiGraph.+", "link" : "mathlib\/graph\/DiGraph.html#+(edge:mathlib.graph.DiEdge[mathlib.graph.Node[T]]):mathlib.graph.DiGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(_vertices: Set[Node[T]]): DiGraph[T]", "member" : "mathlib.graph.DiGraph.+", "link" : "mathlib\/graph\/DiGraph.html#+(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.DiGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(vertex: Node[T]): DiGraph[T]", "member" : "mathlib.graph.DiGraph.+", "link" : "mathlib\/graph\/DiGraph.html#+(vertex:mathlib.graph.Node[T]):mathlib.graph.DiGraph[T]", "kind" : "def"}, {"member" : "mathlib.graph.DiGraph#<init>", "error" : "unsupported entity"}, {"label" : "edges", "tail" : ": Set[DiEdge[Node[T]]]", "member" : "mathlib.graph.DiGraph.edges", "link" : "mathlib\/graph\/DiGraph.html#edges:Set[mathlib.graph.DiEdge[mathlib.graph.Node[T]]]", "kind" : "val"}, {"label" : "vertices", "tail" : ": Set[Node[T]]", "member" : "mathlib.graph.DiGraph.vertices", "link" : "mathlib\/graph\/DiGraph.html#vertices:Set[mathlib.graph.Node[T]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/DiGraph.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/DiGraph.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "containsCycle", "tail" : "(): Boolean", "member" : "mathlib.graph.UnweightedGraph.containsCycle", "link" : "mathlib\/graph\/DiGraph.html#containsCycle:Boolean", "kind" : "def"}, {"label" : "nthAdjacencyList", "tail" : "(n: Int): Map[Node[T], Set[Node[T]]]", "member" : "mathlib.graph.UnweightedGraph.nthAdjacencyList", "link" : "mathlib\/graph\/DiGraph.html#nthAdjacencyList(n:Int):Map[mathlib.graph.Node[T],Set[mathlib.graph.Node[T]]]", "kind" : "def"}, {"label" : "adjacencyList", "tail" : ": Map[Node[T], Set[Node[T]]]", "member" : "mathlib.graph.UnweightedGraph.adjacencyList", "link" : "mathlib\/graph\/DiGraph.html#adjacencyList:Map[mathlib.graph.Node[T],Set[mathlib.graph.Node[T]]]", "kind" : "lazy val"}, {"label" : "noEdges", "tail" : "(): Boolean", "member" : "mathlib.graph.Graph.noEdges", "link" : "mathlib\/graph\/DiGraph.html#noEdges:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "mathlib.graph.Graph.isEmpty", "link" : "mathlib\/graph\/DiGraph.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "mathlib.graph.Graph.size", "link" : "mathlib\/graph\/DiGraph.html#size:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/DiGraph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/DiGraph.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/DiGraph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/DiGraph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/DiGraph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/DiGraph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/DiGraph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/DiGraph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/DiGraph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/DiGraph.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/DiGraph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/DiGraph.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/DiGraph.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/DiGraph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/DiGraph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/DiGraph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/graph\/DiGraph.html", "kind" : "case class"}, {"name" : "mathlib.graph.Graph", "shortDescription" : "This abstract class represent the base of all graphs (excluding hyper graphs).", "members_class" : [{"label" : "noEdges", "tail" : "(): Boolean", "member" : "mathlib.graph.Graph.noEdges", "link" : "mathlib\/graph\/Graph.html#noEdges:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "mathlib.graph.Graph.isEmpty", "link" : "mathlib\/graph\/Graph.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "mathlib.graph.Graph.size", "link" : "mathlib\/graph\/Graph.html#size:Int", "kind" : "def"}, {"member" : "mathlib.graph.Graph#<init>", "error" : "unsupported entity"}, {"label" : "edges", "tail" : ": Set[E]", "member" : "mathlib.graph.Graph.edges", "link" : "mathlib\/graph\/Graph.html#edges:Set[E]", "kind" : "val"}, {"label" : "vertices", "tail" : ": Set[Node[T]]", "member" : "mathlib.graph.Graph.vertices", "link" : "mathlib\/graph\/Graph.html#vertices:Set[mathlib.graph.Node[T]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/Graph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/Graph.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/Graph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/Graph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/Graph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/Graph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/Graph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/Graph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/Graph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/Graph.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/Graph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/Graph.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "mathlib\/graph\/Graph.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/Graph.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/graph\/Graph.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "mathlib\/graph\/Graph.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/Graph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/Graph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/Graph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "containsCycle", "tail" : "(): Boolean", "member" : "mathlib.graph.Graph.containsCycle", "link" : "mathlib\/graph\/Graph.html#containsCycle:Boolean", "kind" : "abstract def"}, {"label" : "merge", "tail" : "(that: G): Graph[T, E]", "member" : "mathlib.graph.Graph.merge", "link" : "mathlib\/graph\/Graph.html#merge[G<:mathlib.graph.Graph[T,E]](that:G):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "-", "tail" : "(_edges: Set[E])(arg0: ClassTag[X]): Graph[T, E]", "member" : "mathlib.graph.Graph.-", "link" : "mathlib\/graph\/Graph.html#-[X](_edges:Set[E])(implicitevidence$2:scala.reflect.ClassTag[X]):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "-", "tail" : "(edge: E): Graph[T, E]", "member" : "mathlib.graph.Graph.-", "link" : "mathlib\/graph\/Graph.html#-(edge:E):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "-", "tail" : "(_vertices: Set[Node[T]]): Graph[T, E]", "member" : "mathlib.graph.Graph.-", "link" : "mathlib\/graph\/Graph.html#-(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "-", "tail" : "(vertex: Node[T]): Graph[T, E]", "member" : "mathlib.graph.Graph.-", "link" : "mathlib\/graph\/Graph.html#-(vertex:mathlib.graph.Node[T]):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "+", "tail" : "(_edges: Set[E])(arg0: ClassTag[X]): Graph[T, E]", "member" : "mathlib.graph.Graph.+", "link" : "mathlib\/graph\/Graph.html#+[X](_edges:Set[E])(implicitevidence$1:scala.reflect.ClassTag[X]):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "+", "tail" : "(edge: E): Graph[T, E]", "member" : "mathlib.graph.Graph.+", "link" : "mathlib\/graph\/Graph.html#+(edge:E):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "+", "tail" : "(_vertices: Set[Node[T]]): Graph[T, E]", "member" : "mathlib.graph.Graph.+", "link" : "mathlib\/graph\/Graph.html#+(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "+", "tail" : "(vertex: Node[T]): Graph[T, E]", "member" : "mathlib.graph.Graph.+", "link" : "mathlib\/graph\/Graph.html#+(vertex:mathlib.graph.Node[T]):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}], "class" : "mathlib\/graph\/Graph.html", "kind" : "class"}, {"name" : "mathlib.graph.GraphImplicits", "shortDescription" : "A collection of implicit functions to construct nodes, edges and graphs.", "object" : "mathlib\/graph\/GraphImplicits$.html", "members_object" : [{"label" : "WUnDiHyperEdgeImpl", "tail" : "", "member" : "mathlib.graph.GraphImplicits.WUnDiHyperEdgeImpl", "link" : "mathlib\/graph\/GraphImplicits$.html#WUnDiHyperEdgeImpl[T]extendsAnyRef", "kind" : "implicit class"}, {"label" : "UnDiHyperEdgeImpl2", "tail" : "", "member" : "mathlib.graph.GraphImplicits.UnDiHyperEdgeImpl2", "link" : "mathlib\/graph\/GraphImplicits$.html#UnDiHyperEdgeImpl2[T]extendsAnyRef", "kind" : "implicit class"}, {"label" : "UnDiHyperEdgeImpl1", "tail" : "", "member" : "mathlib.graph.GraphImplicits.UnDiHyperEdgeImpl1", "link" : "mathlib\/graph\/GraphImplicits$.html#UnDiHyperEdgeImpl1[T]extendsAnyRef", "kind" : "implicit class"}, {"label" : "WDiHyperEdgeImpl", "tail" : "", "member" : "mathlib.graph.GraphImplicits.WDiHyperEdgeImpl", "link" : "mathlib\/graph\/GraphImplicits$.html#WDiHyperEdgeImpl[T]extendsAnyRef", "kind" : "implicit class"}, {"label" : "DiHyperEdgeImpl2", "tail" : "", "member" : "mathlib.graph.GraphImplicits.DiHyperEdgeImpl2", "link" : "mathlib\/graph\/GraphImplicits$.html#DiHyperEdgeImpl2[T]extendsAnyRef", "kind" : "implicit class"}, {"label" : "DiHyperEdgeImpl1", "tail" : "", "member" : "mathlib.graph.GraphImplicits.DiHyperEdgeImpl1", "link" : "mathlib\/graph\/GraphImplicits$.html#DiHyperEdgeImpl1[T]extendsAnyRef", "kind" : "implicit class"}, {"label" : "WUnDiEdgeImpl", "tail" : "", "member" : "mathlib.graph.GraphImplicits.WUnDiEdgeImpl", "link" : "mathlib\/graph\/GraphImplicits$.html#WUnDiEdgeImpl[T<:mathlib.graph.Node[_]]extendsAnyRef", "kind" : "implicit class"}, {"label" : "WDiEdgeImpl", "tail" : "", "member" : "mathlib.graph.GraphImplicits.WDiEdgeImpl", "link" : "mathlib\/graph\/GraphImplicits$.html#WDiEdgeImpl[T<:mathlib.graph.Node[_]]extendsAnyRef", "kind" : "implicit class"}, {"label" : "EdgeImpl2", "tail" : "", "member" : "mathlib.graph.GraphImplicits.EdgeImpl2", "link" : "mathlib\/graph\/GraphImplicits$.html#EdgeImpl2[T]extendsAnyRef", "kind" : "implicit class"}, {"label" : "EdgeImpl", "tail" : "", "member" : "mathlib.graph.GraphImplicits.EdgeImpl", "link" : "mathlib\/graph\/GraphImplicits$.html#EdgeImpl[T<:mathlib.graph.Node[_]]extendsAnyRef", "kind" : "implicit class"}, {"label" : "N", "tail" : "(value: T): Node[T]", "member" : "mathlib.graph.GraphImplicits.N", "link" : "mathlib\/graph\/GraphImplicits$.html#N[T](value:T):mathlib.graph.Node[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/GraphImplicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/GraphImplicits$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/GraphImplicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/GraphImplicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/GraphImplicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/GraphImplicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/GraphImplicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/GraphImplicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/GraphImplicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/GraphImplicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/GraphImplicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/GraphImplicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "mathlib\/graph\/GraphImplicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/GraphImplicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/graph\/GraphImplicits$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "mathlib\/graph\/GraphImplicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/GraphImplicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/GraphImplicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/GraphImplicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "mathlib.graph.Node", "shortDescription" : "Case class to represent a vertex or node in graphs.", "members_case class" : [{"member" : "mathlib.graph.Node#<init>", "error" : "unsupported entity"}, {"label" : "label", "tail" : ": T", "member" : "mathlib.graph.Node.label", "link" : "mathlib\/graph\/Node.html#label:T", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/Node.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/Node.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/Node.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/Node.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/Node.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/Node.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/Node.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/Node.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/Node.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/Node.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/Node.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/Node.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/Node.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/Node.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/Node.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/Node.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/Node.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/Node.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/graph\/Node.html", "kind" : "case class"}, {"name" : "mathlib.graph.NodeWeightPair", "shortDescription" : "A data structure to represent pairs of nodes and weights (of the path leading to this node).", "members_case class" : [{"label" : "+", "tail" : "(weight: Double): NodeWeightPair[T]", "member" : "mathlib.graph.NodeWeightPair.+", "link" : "mathlib\/graph\/NodeWeightPair.html#+(weight:Double):mathlib.graph.NodeWeightPair[T]", "kind" : "def"}, {"member" : "mathlib.graph.NodeWeightPair#<init>", "error" : "unsupported entity"}, {"label" : "weight", "tail" : ": Double", "member" : "mathlib.graph.NodeWeightPair.weight", "link" : "mathlib\/graph\/NodeWeightPair.html#weight:Double", "kind" : "val"}, {"label" : "node", "tail" : ": Node[T]", "member" : "mathlib.graph.NodeWeightPair.node", "link" : "mathlib\/graph\/NodeWeightPair.html#node:mathlib.graph.Node[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/NodeWeightPair.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/NodeWeightPair.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/NodeWeightPair.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/NodeWeightPair.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/NodeWeightPair.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/NodeWeightPair.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/NodeWeightPair.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/NodeWeightPair.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/NodeWeightPair.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/NodeWeightPair.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/NodeWeightPair.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/NodeWeightPair.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/NodeWeightPair.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/NodeWeightPair.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/NodeWeightPair.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/NodeWeightPair.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/NodeWeightPair.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/NodeWeightPair.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/graph\/NodeWeightPair.html", "kind" : "case class"}, {"name" : "mathlib.graph.UnDiEdge", "shortDescription" : "Represents an undirected edge.", "members_case class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "mathlib.graph.UnDiEdge.hashCode", "link" : "mathlib\/graph\/UnDiEdge.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "mathlib.graph.UnDiEdge.equals", "link" : "mathlib\/graph\/UnDiEdge.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "mathlib.graph.UnDiEdge.canEqual", "link" : "mathlib\/graph\/UnDiEdge.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"member" : "mathlib.graph.UnDiEdge#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": T", "member" : "mathlib.graph.UnDiEdge.right", "link" : "mathlib\/graph\/UnDiEdge.html#right:T", "kind" : "val"}, {"label" : "left", "tail" : ": T", "member" : "mathlib.graph.UnDiEdge.left", "link" : "mathlib\/graph\/UnDiEdge.html#left:T", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/UnDiEdge.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/UnDiEdge.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "getNeighborOf", "tail" : "(vertex: T): Option[T]", "member" : "mathlib.graph.properties.Edge.getNeighborOf", "link" : "mathlib\/graph\/UnDiEdge.html#getNeighborOf(vertex:T):Option[T]", "kind" : "def"}, {"label" : "contains", "tail" : "(vertex: T): Boolean", "member" : "mathlib.graph.properties.Edge.contains", "link" : "mathlib\/graph\/UnDiEdge.html#contains(vertex:T):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/UnDiEdge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/UnDiEdge.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/UnDiEdge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/UnDiEdge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/UnDiEdge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/UnDiEdge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/UnDiEdge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/UnDiEdge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/UnDiEdge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/UnDiEdge.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/UnDiEdge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/UnDiEdge.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/UnDiEdge.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/UnDiEdge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/UnDiEdge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/UnDiEdge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/graph\/UnDiEdge.html", "kind" : "case class"}, {"name" : "mathlib.graph.UnDiGraph", "case object" : "mathlib\/graph\/UnDiGraph$.html", "shortDescription" : "Represents an unweighted undirected graph.", "members_case object" : [{"label" : "uniform", "tail" : "(n: Int, numberEdges: Int): UnDiGraph[String]", "member" : "mathlib.graph.UnDiGraph.uniform", "link" : "mathlib\/graph\/UnDiGraph$.html#uniform(n:Int,numberEdges:Int):mathlib.graph.UnDiGraph[String]", "kind" : "def"}, {"label" : "uniform", "tail" : "(objects: Set[T], numberEdges: Int): UnDiGraph[T]", "member" : "mathlib.graph.UnDiGraph.uniform", "link" : "mathlib\/graph\/UnDiGraph$.html#uniform[T](objects:Set[T],numberEdges:Int):mathlib.graph.UnDiGraph[T]", "kind" : "def"}, {"label" : "random", "tail" : "(n: Int, p: Double): UnDiGraph[String]", "member" : "mathlib.graph.UnDiGraph.random", "link" : "mathlib\/graph\/UnDiGraph$.html#random(n:Int,p:Double):mathlib.graph.UnDiGraph[String]", "kind" : "def"}, {"label" : "random", "tail" : "(objects: Set[T], p: Double): UnDiGraph[T]", "member" : "mathlib.graph.UnDiGraph.random", "link" : "mathlib\/graph\/UnDiGraph$.html#random[T](objects:Set[T],p:Double):mathlib.graph.UnDiGraph[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(vertices: Set[T], edges: Set[UnDiEdge[Node[T]]])(arg0: ClassTag[X]): UnDiGraph[T]", "member" : "mathlib.graph.UnDiGraph.apply", "link" : "mathlib\/graph\/UnDiGraph$.html#apply[T,X](vertices:Set[T],edges:Set[mathlib.graph.UnDiEdge[mathlib.graph.Node[T]]])(implicitevidence$4:scala.reflect.ClassTag[X]):mathlib.graph.UnDiGraph[T]", "kind" : "def"}, {"label" : "empty", "tail" : "(): UnDiGraph[T]", "member" : "mathlib.graph.UnDiGraph.empty", "link" : "mathlib\/graph\/UnDiGraph$.html#empty[T]:mathlib.graph.UnDiGraph[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(edges: Set[UnDiEdge[Node[T]]])(arg0: ClassTag[X]): UnDiGraph[T]", "member" : "mathlib.graph.UnDiGraph.apply", "link" : "mathlib\/graph\/UnDiGraph$.html#apply[T,X](edges:Set[mathlib.graph.UnDiEdge[mathlib.graph.Node[T]]])(implicitevidence$3:scala.reflect.ClassTag[X]):mathlib.graph.UnDiGraph[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(vertices: Set[Node[T]]): UnDiGraph[T]", "member" : "mathlib.graph.UnDiGraph.apply", "link" : "mathlib\/graph\/UnDiGraph$.html#apply[T](vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.UnDiGraph[T]", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/UnDiGraph$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "mathlib\/graph\/UnDiGraph$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/UnDiGraph$.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/UnDiGraph$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/UnDiGraph$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/UnDiGraph$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/UnDiGraph$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/UnDiGraph$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/UnDiGraph$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/UnDiGraph$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/UnDiGraph$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/UnDiGraph$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/UnDiGraph$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/UnDiGraph$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/UnDiGraph$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/UnDiGraph$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/graph\/UnDiGraph$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/UnDiGraph$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/UnDiGraph$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/UnDiGraph$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "merge", "tail" : "(that: G): UnDiGraph[T]", "member" : "mathlib.graph.UnDiGraph.merge", "link" : "mathlib\/graph\/UnDiGraph.html#merge[G<:mathlib.graph.Graph[T,mathlib.graph.UnDiEdge[mathlib.graph.Node[T]]]](that:G):mathlib.graph.UnDiGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(_edges: Set[UnDiEdge[Node[T]]])(arg0: ClassTag[X]): UnDiGraph[T]", "member" : "mathlib.graph.UnDiGraph.-", "link" : "mathlib\/graph\/UnDiGraph.html#-[X](_edges:Set[mathlib.graph.UnDiEdge[mathlib.graph.Node[T]]])(implicitevidence$2:scala.reflect.ClassTag[X]):mathlib.graph.UnDiGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(edge: UnDiEdge[Node[T]]): UnDiGraph[T]", "member" : "mathlib.graph.UnDiGraph.-", "link" : "mathlib\/graph\/UnDiGraph.html#-(edge:mathlib.graph.UnDiEdge[mathlib.graph.Node[T]]):mathlib.graph.UnDiGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(_vertices: Set[Node[T]]): UnDiGraph[T]", "member" : "mathlib.graph.UnDiGraph.-", "link" : "mathlib\/graph\/UnDiGraph.html#-(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.UnDiGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(vertex: Node[T]): UnDiGraph[T]", "member" : "mathlib.graph.UnDiGraph.-", "link" : "mathlib\/graph\/UnDiGraph.html#-(vertex:mathlib.graph.Node[T]):mathlib.graph.UnDiGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(_edges: Set[UnDiEdge[Node[T]]])(arg0: ClassTag[X]): UnDiGraph[T]", "member" : "mathlib.graph.UnDiGraph.+", "link" : "mathlib\/graph\/UnDiGraph.html#+[X](_edges:Set[mathlib.graph.UnDiEdge[mathlib.graph.Node[T]]])(implicitevidence$1:scala.reflect.ClassTag[X]):mathlib.graph.UnDiGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(edge: UnDiEdge[Node[T]]): UnDiGraph[T]", "member" : "mathlib.graph.UnDiGraph.+", "link" : "mathlib\/graph\/UnDiGraph.html#+(edge:mathlib.graph.UnDiEdge[mathlib.graph.Node[T]]):mathlib.graph.UnDiGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(_vertices: Set[Node[T]]): UnDiGraph[T]", "member" : "mathlib.graph.UnDiGraph.+", "link" : "mathlib\/graph\/UnDiGraph.html#+(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.UnDiGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(vertex: Node[T]): UnDiGraph[T]", "member" : "mathlib.graph.UnDiGraph.+", "link" : "mathlib\/graph\/UnDiGraph.html#+(vertex:mathlib.graph.Node[T]):mathlib.graph.UnDiGraph[T]", "kind" : "def"}, {"member" : "mathlib.graph.UnDiGraph#<init>", "error" : "unsupported entity"}, {"label" : "edges", "tail" : ": Set[UnDiEdge[Node[T]]]", "member" : "mathlib.graph.UnDiGraph.edges", "link" : "mathlib\/graph\/UnDiGraph.html#edges:Set[mathlib.graph.UnDiEdge[mathlib.graph.Node[T]]]", "kind" : "val"}, {"label" : "vertices", "tail" : ": Set[Node[T]]", "member" : "mathlib.graph.UnDiGraph.vertices", "link" : "mathlib\/graph\/UnDiGraph.html#vertices:Set[mathlib.graph.Node[T]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/UnDiGraph.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/UnDiGraph.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "containsCycle", "tail" : "(): Boolean", "member" : "mathlib.graph.UnweightedGraph.containsCycle", "link" : "mathlib\/graph\/UnDiGraph.html#containsCycle:Boolean", "kind" : "def"}, {"label" : "nthAdjacencyList", "tail" : "(n: Int): Map[Node[T], Set[Node[T]]]", "member" : "mathlib.graph.UnweightedGraph.nthAdjacencyList", "link" : "mathlib\/graph\/UnDiGraph.html#nthAdjacencyList(n:Int):Map[mathlib.graph.Node[T],Set[mathlib.graph.Node[T]]]", "kind" : "def"}, {"label" : "adjacencyList", "tail" : ": Map[Node[T], Set[Node[T]]]", "member" : "mathlib.graph.UnweightedGraph.adjacencyList", "link" : "mathlib\/graph\/UnDiGraph.html#adjacencyList:Map[mathlib.graph.Node[T],Set[mathlib.graph.Node[T]]]", "kind" : "lazy val"}, {"label" : "noEdges", "tail" : "(): Boolean", "member" : "mathlib.graph.Graph.noEdges", "link" : "mathlib\/graph\/UnDiGraph.html#noEdges:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "mathlib.graph.Graph.isEmpty", "link" : "mathlib\/graph\/UnDiGraph.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "mathlib.graph.Graph.size", "link" : "mathlib\/graph\/UnDiGraph.html#size:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/UnDiGraph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/UnDiGraph.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/UnDiGraph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/UnDiGraph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/UnDiGraph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/UnDiGraph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/UnDiGraph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/UnDiGraph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/UnDiGraph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/UnDiGraph.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/UnDiGraph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/UnDiGraph.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/UnDiGraph.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/UnDiGraph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/UnDiGraph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/UnDiGraph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/graph\/UnDiGraph.html", "kind" : "case class"}, {"name" : "mathlib.graph.UnweightedGraph", "shortDescription" : "Abstract class representing unweighted graphs.", "members_class" : [{"label" : "containsCycle", "tail" : "(): Boolean", "member" : "mathlib.graph.UnweightedGraph.containsCycle", "link" : "mathlib\/graph\/UnweightedGraph.html#containsCycle:Boolean", "kind" : "def"}, {"label" : "nthAdjacencyList", "tail" : "(n: Int): Map[Node[T], Set[Node[T]]]", "member" : "mathlib.graph.UnweightedGraph.nthAdjacencyList", "link" : "mathlib\/graph\/UnweightedGraph.html#nthAdjacencyList(n:Int):Map[mathlib.graph.Node[T],Set[mathlib.graph.Node[T]]]", "kind" : "def"}, {"label" : "adjacencyList", "tail" : ": Map[Node[T], Set[Node[T]]]", "member" : "mathlib.graph.UnweightedGraph.adjacencyList", "link" : "mathlib\/graph\/UnweightedGraph.html#adjacencyList:Map[mathlib.graph.Node[T],Set[mathlib.graph.Node[T]]]", "kind" : "lazy val"}, {"member" : "mathlib.graph.UnweightedGraph#<init>", "error" : "unsupported entity"}, {"label" : "edges", "tail" : ": Set[E]", "member" : "mathlib.graph.UnweightedGraph.edges", "link" : "mathlib\/graph\/UnweightedGraph.html#edges:Set[E]", "kind" : "val"}, {"label" : "vertices", "tail" : ": Set[Node[T]]", "member" : "mathlib.graph.UnweightedGraph.vertices", "link" : "mathlib\/graph\/UnweightedGraph.html#vertices:Set[mathlib.graph.Node[T]]", "kind" : "val"}, {"label" : "noEdges", "tail" : "(): Boolean", "member" : "mathlib.graph.Graph.noEdges", "link" : "mathlib\/graph\/UnweightedGraph.html#noEdges:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "mathlib.graph.Graph.isEmpty", "link" : "mathlib\/graph\/UnweightedGraph.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "mathlib.graph.Graph.size", "link" : "mathlib\/graph\/UnweightedGraph.html#size:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/UnweightedGraph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/UnweightedGraph.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/UnweightedGraph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/UnweightedGraph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/UnweightedGraph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/UnweightedGraph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/UnweightedGraph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/UnweightedGraph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/UnweightedGraph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/UnweightedGraph.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/UnweightedGraph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/UnweightedGraph.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "mathlib\/graph\/UnweightedGraph.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/UnweightedGraph.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/graph\/UnweightedGraph.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "mathlib\/graph\/UnweightedGraph.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/UnweightedGraph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/UnweightedGraph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/UnweightedGraph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "merge", "tail" : "(that: G): Graph[T, E]", "member" : "mathlib.graph.Graph.merge", "link" : "mathlib\/graph\/UnweightedGraph.html#merge[G<:mathlib.graph.Graph[T,E]](that:G):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "-", "tail" : "(_edges: Set[E])(arg0: ClassTag[X]): Graph[T, E]", "member" : "mathlib.graph.Graph.-", "link" : "mathlib\/graph\/UnweightedGraph.html#-[X](_edges:Set[E])(implicitevidence$2:scala.reflect.ClassTag[X]):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "-", "tail" : "(edge: E): Graph[T, E]", "member" : "mathlib.graph.Graph.-", "link" : "mathlib\/graph\/UnweightedGraph.html#-(edge:E):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "-", "tail" : "(_vertices: Set[Node[T]]): Graph[T, E]", "member" : "mathlib.graph.Graph.-", "link" : "mathlib\/graph\/UnweightedGraph.html#-(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "-", "tail" : "(vertex: Node[T]): Graph[T, E]", "member" : "mathlib.graph.Graph.-", "link" : "mathlib\/graph\/UnweightedGraph.html#-(vertex:mathlib.graph.Node[T]):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "+", "tail" : "(_edges: Set[E])(arg0: ClassTag[X]): Graph[T, E]", "member" : "mathlib.graph.Graph.+", "link" : "mathlib\/graph\/UnweightedGraph.html#+[X](_edges:Set[E])(implicitevidence$1:scala.reflect.ClassTag[X]):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "+", "tail" : "(edge: E): Graph[T, E]", "member" : "mathlib.graph.Graph.+", "link" : "mathlib\/graph\/UnweightedGraph.html#+(edge:E):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "+", "tail" : "(_vertices: Set[Node[T]]): Graph[T, E]", "member" : "mathlib.graph.Graph.+", "link" : "mathlib\/graph\/UnweightedGraph.html#+(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "+", "tail" : "(vertex: Node[T]): Graph[T, E]", "member" : "mathlib.graph.Graph.+", "link" : "mathlib\/graph\/UnweightedGraph.html#+(vertex:mathlib.graph.Node[T]):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}], "class" : "mathlib\/graph\/UnweightedGraph.html", "kind" : "class"}, {"name" : "mathlib.graph.WDiEdge", "shortDescription" : "Represents a weighted directed edge.", "members_case class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "mathlib.graph.WDiEdge.hashCode", "link" : "mathlib\/graph\/WDiEdge.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "mathlib.graph.WDiEdge.equals", "link" : "mathlib\/graph\/WDiEdge.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "mathlib.graph.WDiEdge.canEqual", "link" : "mathlib\/graph\/WDiEdge.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "getNeighborOf", "tail" : "(vertex: T): Option[T]", "member" : "mathlib.graph.WDiEdge.getNeighborOf", "link" : "mathlib\/graph\/WDiEdge.html#getNeighborOf(vertex:T):Option[T]", "kind" : "def"}, {"member" : "mathlib.graph.WDiEdge#<init>", "error" : "unsupported entity"}, {"label" : "weight", "tail" : ": Double", "member" : "mathlib.graph.WDiEdge.weight", "link" : "mathlib\/graph\/WDiEdge.html#weight:Double", "kind" : "val"}, {"label" : "right", "tail" : ": T", "member" : "mathlib.graph.WDiEdge.right", "link" : "mathlib\/graph\/WDiEdge.html#right:T", "kind" : "val"}, {"label" : "left", "tail" : ": T", "member" : "mathlib.graph.WDiEdge.left", "link" : "mathlib\/graph\/WDiEdge.html#left:T", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/WDiEdge.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/WDiEdge.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "contains", "tail" : "(vertex: T): Boolean", "member" : "mathlib.graph.properties.Edge.contains", "link" : "mathlib\/graph\/WDiEdge.html#contains(vertex:T):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/WDiEdge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/WDiEdge.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/WDiEdge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/WDiEdge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/WDiEdge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/WDiEdge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/WDiEdge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/WDiEdge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/WDiEdge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/WDiEdge.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/WDiEdge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/WDiEdge.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/WDiEdge.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/WDiEdge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/WDiEdge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/WDiEdge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/graph\/WDiEdge.html", "kind" : "case class"}, {"name" : "mathlib.graph.WDiGraph", "case object" : "mathlib\/graph\/WDiGraph$.html", "shortDescription" : "Represents a weighted directed graph.", "members_case object" : [{"label" : "uniform", "tail" : "(n: Int, numberEdges: Int): WDiGraph[String]", "member" : "mathlib.graph.WDiGraph.uniform", "link" : "mathlib\/graph\/WDiGraph$.html#uniform(n:Int,numberEdges:Int):mathlib.graph.WDiGraph[String]", "kind" : "def"}, {"label" : "uniform", "tail" : "(objects: Set[T], numberEdges: Int): WDiGraph[T]", "member" : "mathlib.graph.WDiGraph.uniform", "link" : "mathlib\/graph\/WDiGraph$.html#uniform[T](objects:Set[T],numberEdges:Int):mathlib.graph.WDiGraph[T]", "kind" : "def"}, {"label" : "random", "tail" : "(n: Int, p: Double): WDiGraph[String]", "member" : "mathlib.graph.WDiGraph.random", "link" : "mathlib\/graph\/WDiGraph$.html#random(n:Int,p:Double):mathlib.graph.WDiGraph[String]", "kind" : "def"}, {"label" : "random", "tail" : "(objects: Set[T], p: Double): WDiGraph[T]", "member" : "mathlib.graph.WDiGraph.random", "link" : "mathlib\/graph\/WDiGraph$.html#random[T](objects:Set[T],p:Double):mathlib.graph.WDiGraph[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(vertices: Set[T], edges: Set[WDiEdge[Node[T]]])(arg0: ClassTag[X]): WDiGraph[T]", "member" : "mathlib.graph.WDiGraph.apply", "link" : "mathlib\/graph\/WDiGraph$.html#apply[T,X](vertices:Set[T],edges:Set[mathlib.graph.WDiEdge[mathlib.graph.Node[T]]])(implicitevidence$4:scala.reflect.ClassTag[X]):mathlib.graph.WDiGraph[T]", "kind" : "def"}, {"label" : "empty", "tail" : "(): WDiGraph[T]", "member" : "mathlib.graph.WDiGraph.empty", "link" : "mathlib\/graph\/WDiGraph$.html#empty[T]:mathlib.graph.WDiGraph[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(edges: Set[WDiEdge[Node[T]]])(arg0: ClassTag[X]): WDiGraph[T]", "member" : "mathlib.graph.WDiGraph.apply", "link" : "mathlib\/graph\/WDiGraph$.html#apply[T,X](edges:Set[mathlib.graph.WDiEdge[mathlib.graph.Node[T]]])(implicitevidence$3:scala.reflect.ClassTag[X]):mathlib.graph.WDiGraph[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(vertices: Set[Node[T]]): WDiGraph[T]", "member" : "mathlib.graph.WDiGraph.apply", "link" : "mathlib\/graph\/WDiGraph$.html#apply[T](vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.WDiGraph[T]", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/WDiGraph$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "mathlib\/graph\/WDiGraph$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/WDiGraph$.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/WDiGraph$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/WDiGraph$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/WDiGraph$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/WDiGraph$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/WDiGraph$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/WDiGraph$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/WDiGraph$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/WDiGraph$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/WDiGraph$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/WDiGraph$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/WDiGraph$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/WDiGraph$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/WDiGraph$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/graph\/WDiGraph$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/WDiGraph$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/WDiGraph$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/WDiGraph$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "merge", "tail" : "(that: G): WDiGraph[T]", "member" : "mathlib.graph.WDiGraph.merge", "link" : "mathlib\/graph\/WDiGraph.html#merge[G<:mathlib.graph.Graph[T,mathlib.graph.WDiEdge[mathlib.graph.Node[T]]]](that:G):mathlib.graph.WDiGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(_edges: Set[WDiEdge[Node[T]]])(arg0: ClassTag[X]): WDiGraph[T]", "member" : "mathlib.graph.WDiGraph.-", "link" : "mathlib\/graph\/WDiGraph.html#-[X](_edges:Set[mathlib.graph.WDiEdge[mathlib.graph.Node[T]]])(implicitevidence$2:scala.reflect.ClassTag[X]):mathlib.graph.WDiGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(edge: WDiEdge[Node[T]]): WDiGraph[T]", "member" : "mathlib.graph.WDiGraph.-", "link" : "mathlib\/graph\/WDiGraph.html#-(edge:mathlib.graph.WDiEdge[mathlib.graph.Node[T]]):mathlib.graph.WDiGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(_vertices: Set[Node[T]]): WDiGraph[T]", "member" : "mathlib.graph.WDiGraph.-", "link" : "mathlib\/graph\/WDiGraph.html#-(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.WDiGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(vertex: Node[T]): WDiGraph[T]", "member" : "mathlib.graph.WDiGraph.-", "link" : "mathlib\/graph\/WDiGraph.html#-(vertex:mathlib.graph.Node[T]):mathlib.graph.WDiGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(_edges: Set[WDiEdge[Node[T]]])(arg0: ClassTag[X]): WDiGraph[T]", "member" : "mathlib.graph.WDiGraph.+", "link" : "mathlib\/graph\/WDiGraph.html#+[X](_edges:Set[mathlib.graph.WDiEdge[mathlib.graph.Node[T]]])(implicitevidence$1:scala.reflect.ClassTag[X]):mathlib.graph.WDiGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(edge: WDiEdge[Node[T]]): WDiGraph[T]", "member" : "mathlib.graph.WDiGraph.+", "link" : "mathlib\/graph\/WDiGraph.html#+(edge:mathlib.graph.WDiEdge[mathlib.graph.Node[T]]):mathlib.graph.WDiGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(_vertices: Set[Node[T]]): WDiGraph[T]", "member" : "mathlib.graph.WDiGraph.+", "link" : "mathlib\/graph\/WDiGraph.html#+(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.WDiGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(vertex: Node[T]): WDiGraph[T]", "member" : "mathlib.graph.WDiGraph.+", "link" : "mathlib\/graph\/WDiGraph.html#+(vertex:mathlib.graph.Node[T]):mathlib.graph.WDiGraph[T]", "kind" : "def"}, {"member" : "mathlib.graph.WDiGraph#<init>", "error" : "unsupported entity"}, {"label" : "edges", "tail" : ": Set[WDiEdge[Node[T]]]", "member" : "mathlib.graph.WDiGraph.edges", "link" : "mathlib\/graph\/WDiGraph.html#edges:Set[mathlib.graph.WDiEdge[mathlib.graph.Node[T]]]", "kind" : "val"}, {"label" : "vertices", "tail" : ": Set[Node[T]]", "member" : "mathlib.graph.WDiGraph.vertices", "link" : "mathlib\/graph\/WDiGraph.html#vertices:Set[mathlib.graph.Node[T]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/WDiGraph.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/WDiGraph.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "containsCycle", "tail" : "(): Boolean", "member" : "mathlib.graph.WeightedGraph.containsCycle", "link" : "mathlib\/graph\/WDiGraph.html#containsCycle:Boolean", "kind" : "def"}, {"label" : "nthAdjacencyList", "tail" : "(n: Int): Map[Node[T], Set[NodeWeightPair[T]]]", "member" : "mathlib.graph.WeightedGraph.nthAdjacencyList", "link" : "mathlib\/graph\/WDiGraph.html#nthAdjacencyList(n:Int):Map[mathlib.graph.Node[T],Set[mathlib.graph.NodeWeightPair[T]]]", "kind" : "def"}, {"label" : "adjacencyList", "tail" : ": Map[Node[T], Set[NodeWeightPair[T]]]", "member" : "mathlib.graph.WeightedGraph.adjacencyList", "link" : "mathlib\/graph\/WDiGraph.html#adjacencyList:Map[mathlib.graph.Node[T],Set[mathlib.graph.NodeWeightPair[T]]]", "kind" : "lazy val"}, {"label" : "noEdges", "tail" : "(): Boolean", "member" : "mathlib.graph.Graph.noEdges", "link" : "mathlib\/graph\/WDiGraph.html#noEdges:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "mathlib.graph.Graph.isEmpty", "link" : "mathlib\/graph\/WDiGraph.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "mathlib.graph.Graph.size", "link" : "mathlib\/graph\/WDiGraph.html#size:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/WDiGraph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/WDiGraph.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/WDiGraph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/WDiGraph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/WDiGraph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/WDiGraph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/WDiGraph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/WDiGraph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/WDiGraph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/WDiGraph.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/WDiGraph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/WDiGraph.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/WDiGraph.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/WDiGraph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/WDiGraph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/WDiGraph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/graph\/WDiGraph.html", "kind" : "case class"}, {"name" : "mathlib.graph.WeightedGraph", "shortDescription" : "Abstract class representing weighted graphs.", "members_class" : [{"label" : "containsCycle", "tail" : "(): Boolean", "member" : "mathlib.graph.WeightedGraph.containsCycle", "link" : "mathlib\/graph\/WeightedGraph.html#containsCycle:Boolean", "kind" : "def"}, {"label" : "nthAdjacencyList", "tail" : "(n: Int): Map[Node[T], Set[NodeWeightPair[T]]]", "member" : "mathlib.graph.WeightedGraph.nthAdjacencyList", "link" : "mathlib\/graph\/WeightedGraph.html#nthAdjacencyList(n:Int):Map[mathlib.graph.Node[T],Set[mathlib.graph.NodeWeightPair[T]]]", "kind" : "def"}, {"label" : "adjacencyList", "tail" : ": Map[Node[T], Set[NodeWeightPair[T]]]", "member" : "mathlib.graph.WeightedGraph.adjacencyList", "link" : "mathlib\/graph\/WeightedGraph.html#adjacencyList:Map[mathlib.graph.Node[T],Set[mathlib.graph.NodeWeightPair[T]]]", "kind" : "lazy val"}, {"member" : "mathlib.graph.WeightedGraph#<init>", "error" : "unsupported entity"}, {"label" : "edges", "tail" : ": Set[E]", "member" : "mathlib.graph.WeightedGraph.edges", "link" : "mathlib\/graph\/WeightedGraph.html#edges:Set[E]", "kind" : "val"}, {"label" : "vertices", "tail" : ": Set[Node[T]]", "member" : "mathlib.graph.WeightedGraph.vertices", "link" : "mathlib\/graph\/WeightedGraph.html#vertices:Set[mathlib.graph.Node[T]]", "kind" : "val"}, {"label" : "noEdges", "tail" : "(): Boolean", "member" : "mathlib.graph.Graph.noEdges", "link" : "mathlib\/graph\/WeightedGraph.html#noEdges:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "mathlib.graph.Graph.isEmpty", "link" : "mathlib\/graph\/WeightedGraph.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "mathlib.graph.Graph.size", "link" : "mathlib\/graph\/WeightedGraph.html#size:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/WeightedGraph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/WeightedGraph.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/WeightedGraph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/WeightedGraph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/WeightedGraph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/WeightedGraph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/WeightedGraph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/WeightedGraph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/WeightedGraph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/WeightedGraph.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/WeightedGraph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/WeightedGraph.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "mathlib\/graph\/WeightedGraph.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/WeightedGraph.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/graph\/WeightedGraph.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "mathlib\/graph\/WeightedGraph.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/WeightedGraph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/WeightedGraph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/WeightedGraph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "merge", "tail" : "(that: G): Graph[T, E]", "member" : "mathlib.graph.Graph.merge", "link" : "mathlib\/graph\/WeightedGraph.html#merge[G<:mathlib.graph.Graph[T,E]](that:G):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "-", "tail" : "(_edges: Set[E])(arg0: ClassTag[X]): Graph[T, E]", "member" : "mathlib.graph.Graph.-", "link" : "mathlib\/graph\/WeightedGraph.html#-[X](_edges:Set[E])(implicitevidence$2:scala.reflect.ClassTag[X]):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "-", "tail" : "(edge: E): Graph[T, E]", "member" : "mathlib.graph.Graph.-", "link" : "mathlib\/graph\/WeightedGraph.html#-(edge:E):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "-", "tail" : "(_vertices: Set[Node[T]]): Graph[T, E]", "member" : "mathlib.graph.Graph.-", "link" : "mathlib\/graph\/WeightedGraph.html#-(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "-", "tail" : "(vertex: Node[T]): Graph[T, E]", "member" : "mathlib.graph.Graph.-", "link" : "mathlib\/graph\/WeightedGraph.html#-(vertex:mathlib.graph.Node[T]):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "+", "tail" : "(_edges: Set[E])(arg0: ClassTag[X]): Graph[T, E]", "member" : "mathlib.graph.Graph.+", "link" : "mathlib\/graph\/WeightedGraph.html#+[X](_edges:Set[E])(implicitevidence$1:scala.reflect.ClassTag[X]):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "+", "tail" : "(edge: E): Graph[T, E]", "member" : "mathlib.graph.Graph.+", "link" : "mathlib\/graph\/WeightedGraph.html#+(edge:E):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "+", "tail" : "(_vertices: Set[Node[T]]): Graph[T, E]", "member" : "mathlib.graph.Graph.+", "link" : "mathlib\/graph\/WeightedGraph.html#+(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}, {"label" : "+", "tail" : "(vertex: Node[T]): Graph[T, E]", "member" : "mathlib.graph.Graph.+", "link" : "mathlib\/graph\/WeightedGraph.html#+(vertex:mathlib.graph.Node[T]):mathlib.graph.Graph[T,E]", "kind" : "abstract def"}], "class" : "mathlib\/graph\/WeightedGraph.html", "kind" : "class"}, {"name" : "mathlib.graph.WUnDiEdge", "shortDescription" : "Represents a weighted undirected edge.", "members_case class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "mathlib.graph.WUnDiEdge.hashCode", "link" : "mathlib\/graph\/WUnDiEdge.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "mathlib.graph.WUnDiEdge.equals", "link" : "mathlib\/graph\/WUnDiEdge.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "mathlib.graph.WUnDiEdge.canEqual", "link" : "mathlib\/graph\/WUnDiEdge.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"member" : "mathlib.graph.WUnDiEdge#<init>", "error" : "unsupported entity"}, {"label" : "weight", "tail" : ": Double", "member" : "mathlib.graph.WUnDiEdge.weight", "link" : "mathlib\/graph\/WUnDiEdge.html#weight:Double", "kind" : "val"}, {"label" : "right", "tail" : ": T", "member" : "mathlib.graph.WUnDiEdge.right", "link" : "mathlib\/graph\/WUnDiEdge.html#right:T", "kind" : "val"}, {"label" : "left", "tail" : ": T", "member" : "mathlib.graph.WUnDiEdge.left", "link" : "mathlib\/graph\/WUnDiEdge.html#left:T", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/WUnDiEdge.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/WUnDiEdge.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "getNeighborOf", "tail" : "(vertex: T): Option[T]", "member" : "mathlib.graph.properties.Edge.getNeighborOf", "link" : "mathlib\/graph\/WUnDiEdge.html#getNeighborOf(vertex:T):Option[T]", "kind" : "def"}, {"label" : "contains", "tail" : "(vertex: T): Boolean", "member" : "mathlib.graph.properties.Edge.contains", "link" : "mathlib\/graph\/WUnDiEdge.html#contains(vertex:T):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/WUnDiEdge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/WUnDiEdge.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/WUnDiEdge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/WUnDiEdge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/WUnDiEdge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/WUnDiEdge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/WUnDiEdge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/WUnDiEdge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/WUnDiEdge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/WUnDiEdge.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/WUnDiEdge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/WUnDiEdge.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/WUnDiEdge.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/WUnDiEdge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/WUnDiEdge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/WUnDiEdge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/graph\/WUnDiEdge.html", "kind" : "case class"}, {"name" : "mathlib.graph.WUnDiGraph", "case object" : "mathlib\/graph\/WUnDiGraph$.html", "shortDescription" : "", "members_case object" : [{"label" : "uniform", "tail" : "(n: Int, numberEdges: Int): WUnDiGraph[String]", "member" : "mathlib.graph.WUnDiGraph.uniform", "link" : "mathlib\/graph\/WUnDiGraph$.html#uniform(n:Int,numberEdges:Int):mathlib.graph.WUnDiGraph[String]", "kind" : "def"}, {"label" : "uniform", "tail" : "(objects: Set[T], numberEdges: Int): WUnDiGraph[T]", "member" : "mathlib.graph.WUnDiGraph.uniform", "link" : "mathlib\/graph\/WUnDiGraph$.html#uniform[T](objects:Set[T],numberEdges:Int):mathlib.graph.WUnDiGraph[T]", "kind" : "def"}, {"label" : "random", "tail" : "(n: Int, p: Double): WUnDiGraph[String]", "member" : "mathlib.graph.WUnDiGraph.random", "link" : "mathlib\/graph\/WUnDiGraph$.html#random(n:Int,p:Double):mathlib.graph.WUnDiGraph[String]", "kind" : "def"}, {"label" : "random", "tail" : "(objects: Set[T], p: Double): WUnDiGraph[T]", "member" : "mathlib.graph.WUnDiGraph.random", "link" : "mathlib\/graph\/WUnDiGraph$.html#random[T](objects:Set[T],p:Double):mathlib.graph.WUnDiGraph[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(vertices: Set[T], edges: Set[WUnDiEdge[Node[T]]])(arg0: ClassTag[X]): WUnDiGraph[T]", "member" : "mathlib.graph.WUnDiGraph.apply", "link" : "mathlib\/graph\/WUnDiGraph$.html#apply[T,X](vertices:Set[T],edges:Set[mathlib.graph.WUnDiEdge[mathlib.graph.Node[T]]])(implicitevidence$4:scala.reflect.ClassTag[X]):mathlib.graph.WUnDiGraph[T]", "kind" : "def"}, {"label" : "empty", "tail" : "(): WUnDiGraph[T]", "member" : "mathlib.graph.WUnDiGraph.empty", "link" : "mathlib\/graph\/WUnDiGraph$.html#empty[T]:mathlib.graph.WUnDiGraph[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(edges: Set[WUnDiEdge[Node[T]]])(arg0: ClassTag[X]): WUnDiGraph[T]", "member" : "mathlib.graph.WUnDiGraph.apply", "link" : "mathlib\/graph\/WUnDiGraph$.html#apply[T,X](edges:Set[mathlib.graph.WUnDiEdge[mathlib.graph.Node[T]]])(implicitevidence$3:scala.reflect.ClassTag[X]):mathlib.graph.WUnDiGraph[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(vertices: Set[Node[T]]): WUnDiGraph[T]", "member" : "mathlib.graph.WUnDiGraph.apply", "link" : "mathlib\/graph\/WUnDiGraph$.html#apply[T](vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.WUnDiGraph[T]", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/WUnDiGraph$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "mathlib\/graph\/WUnDiGraph$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/WUnDiGraph$.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/WUnDiGraph$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/WUnDiGraph$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/WUnDiGraph$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/WUnDiGraph$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/WUnDiGraph$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/WUnDiGraph$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/WUnDiGraph$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/WUnDiGraph$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/WUnDiGraph$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/WUnDiGraph$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/WUnDiGraph$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/WUnDiGraph$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/WUnDiGraph$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "mathlib\/graph\/WUnDiGraph$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/WUnDiGraph$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/WUnDiGraph$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/WUnDiGraph$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "merge", "tail" : "(that: G): WUnDiGraph[T]", "member" : "mathlib.graph.WUnDiGraph.merge", "link" : "mathlib\/graph\/WUnDiGraph.html#merge[G<:mathlib.graph.Graph[T,mathlib.graph.WUnDiEdge[mathlib.graph.Node[T]]]](that:G):mathlib.graph.WUnDiGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(_edges: Set[WUnDiEdge[Node[T]]])(arg0: ClassTag[X]): WUnDiGraph[T]", "member" : "mathlib.graph.WUnDiGraph.-", "link" : "mathlib\/graph\/WUnDiGraph.html#-[X](_edges:Set[mathlib.graph.WUnDiEdge[mathlib.graph.Node[T]]])(implicitevidence$2:scala.reflect.ClassTag[X]):mathlib.graph.WUnDiGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(edge: WUnDiEdge[Node[T]]): WUnDiGraph[T]", "member" : "mathlib.graph.WUnDiGraph.-", "link" : "mathlib\/graph\/WUnDiGraph.html#-(edge:mathlib.graph.WUnDiEdge[mathlib.graph.Node[T]]):mathlib.graph.WUnDiGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(_vertices: Set[Node[T]]): WUnDiGraph[T]", "member" : "mathlib.graph.WUnDiGraph.-", "link" : "mathlib\/graph\/WUnDiGraph.html#-(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.WUnDiGraph[T]", "kind" : "def"}, {"label" : "-", "tail" : "(vertex: Node[T]): WUnDiGraph[T]", "member" : "mathlib.graph.WUnDiGraph.-", "link" : "mathlib\/graph\/WUnDiGraph.html#-(vertex:mathlib.graph.Node[T]):mathlib.graph.WUnDiGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(_edges: Set[WUnDiEdge[Node[T]]])(arg0: ClassTag[X]): WUnDiGraph[T]", "member" : "mathlib.graph.WUnDiGraph.+", "link" : "mathlib\/graph\/WUnDiGraph.html#+[X](_edges:Set[mathlib.graph.WUnDiEdge[mathlib.graph.Node[T]]])(implicitevidence$1:scala.reflect.ClassTag[X]):mathlib.graph.WUnDiGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(edge: WUnDiEdge[Node[T]]): WUnDiGraph[T]", "member" : "mathlib.graph.WUnDiGraph.+", "link" : "mathlib\/graph\/WUnDiGraph.html#+(edge:mathlib.graph.WUnDiEdge[mathlib.graph.Node[T]]):mathlib.graph.WUnDiGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(_vertices: Set[Node[T]]): WUnDiGraph[T]", "member" : "mathlib.graph.WUnDiGraph.+", "link" : "mathlib\/graph\/WUnDiGraph.html#+(_vertices:Set[mathlib.graph.Node[T]]):mathlib.graph.WUnDiGraph[T]", "kind" : "def"}, {"label" : "+", "tail" : "(vertex: Node[T]): WUnDiGraph[T]", "member" : "mathlib.graph.WUnDiGraph.+", "link" : "mathlib\/graph\/WUnDiGraph.html#+(vertex:mathlib.graph.Node[T]):mathlib.graph.WUnDiGraph[T]", "kind" : "def"}, {"member" : "mathlib.graph.WUnDiGraph#<init>", "error" : "unsupported entity"}, {"label" : "edges", "tail" : ": Set[WUnDiEdge[Node[T]]]", "member" : "mathlib.graph.WUnDiGraph.edges", "link" : "mathlib\/graph\/WUnDiGraph.html#edges:Set[mathlib.graph.WUnDiEdge[mathlib.graph.Node[T]]]", "kind" : "val"}, {"label" : "vertices", "tail" : ": Set[Node[T]]", "member" : "mathlib.graph.WUnDiGraph.vertices", "link" : "mathlib\/graph\/WUnDiGraph.html#vertices:Set[mathlib.graph.Node[T]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/graph\/WUnDiGraph.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/graph\/WUnDiGraph.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "containsCycle", "tail" : "(): Boolean", "member" : "mathlib.graph.WeightedGraph.containsCycle", "link" : "mathlib\/graph\/WUnDiGraph.html#containsCycle:Boolean", "kind" : "def"}, {"label" : "nthAdjacencyList", "tail" : "(n: Int): Map[Node[T], Set[NodeWeightPair[T]]]", "member" : "mathlib.graph.WeightedGraph.nthAdjacencyList", "link" : "mathlib\/graph\/WUnDiGraph.html#nthAdjacencyList(n:Int):Map[mathlib.graph.Node[T],Set[mathlib.graph.NodeWeightPair[T]]]", "kind" : "def"}, {"label" : "adjacencyList", "tail" : ": Map[Node[T], Set[NodeWeightPair[T]]]", "member" : "mathlib.graph.WeightedGraph.adjacencyList", "link" : "mathlib\/graph\/WUnDiGraph.html#adjacencyList:Map[mathlib.graph.Node[T],Set[mathlib.graph.NodeWeightPair[T]]]", "kind" : "lazy val"}, {"label" : "noEdges", "tail" : "(): Boolean", "member" : "mathlib.graph.Graph.noEdges", "link" : "mathlib\/graph\/WUnDiGraph.html#noEdges:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "mathlib.graph.Graph.isEmpty", "link" : "mathlib\/graph\/WUnDiGraph.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "mathlib.graph.Graph.size", "link" : "mathlib\/graph\/WUnDiGraph.html#size:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/graph\/WUnDiGraph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/graph\/WUnDiGraph.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/graph\/WUnDiGraph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/graph\/WUnDiGraph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/graph\/WUnDiGraph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/graph\/WUnDiGraph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/graph\/WUnDiGraph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/WUnDiGraph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/WUnDiGraph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/graph\/WUnDiGraph.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/graph\/WUnDiGraph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/graph\/WUnDiGraph.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/graph\/WUnDiGraph.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/graph\/WUnDiGraph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/graph\/WUnDiGraph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/graph\/WUnDiGraph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/graph\/WUnDiGraph.html", "kind" : "case class"}], "mathlib.utilities" : [{"name" : "mathlib.utilities.BoundedSearchTree", "shortDescription" : "", "members_case class" : [{"label" : "search", "tail" : "(state: T, depth: Int, acc: Set[S]): Set[Set[S]]", "member" : "mathlib.utilities.BoundedSearchTree.search", "link" : "mathlib\/utilities\/BoundedSearchTree.html#search(state:T,depth:Int,acc:Set[S]):Set[Set[S]]", "kind" : "def"}, {"member" : "mathlib.utilities.BoundedSearchTree#<init>", "error" : "unsupported entity"}, {"label" : "branch", "tail" : ": (T) => Set[(T, S)]", "member" : "mathlib.utilities.BoundedSearchTree.branch", "link" : "mathlib\/utilities\/BoundedSearchTree.html#branch:T=>Set[(T,S)]", "kind" : "val"}, {"label" : "bound", "tail" : ": Int", "member" : "mathlib.utilities.BoundedSearchTree.bound", "link" : "mathlib\/utilities\/BoundedSearchTree.html#bound:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "mathlib\/utilities\/BoundedSearchTree.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "mathlib\/utilities\/BoundedSearchTree.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "mathlib\/utilities\/BoundedSearchTree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "mathlib\/utilities\/BoundedSearchTree.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "mathlib\/utilities\/BoundedSearchTree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "mathlib\/utilities\/BoundedSearchTree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "mathlib\/utilities\/BoundedSearchTree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "mathlib\/utilities\/BoundedSearchTree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "mathlib\/utilities\/BoundedSearchTree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/utilities\/BoundedSearchTree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/utilities\/BoundedSearchTree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "mathlib\/utilities\/BoundedSearchTree.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "mathlib\/utilities\/BoundedSearchTree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "mathlib\/utilities\/BoundedSearchTree.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "mathlib\/utilities\/BoundedSearchTree.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "mathlib\/utilities\/BoundedSearchTree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "mathlib\/utilities\/BoundedSearchTree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "mathlib\/utilities\/BoundedSearchTree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "mathlib\/utilities\/BoundedSearchTree.html", "kind" : "case class"}]};